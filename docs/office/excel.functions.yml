### YamlMime:UniversalReference
items:
  - uid: office.Excel.Functions
    summary: |-
      An object for evaluating Excel functions.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: Excel.Functions
    fullName: office.Excel.Functions
    langs:
      - typeScript
    type: class
    extends:
      - OfficeExtension.ClientObject
    package: office
    children:
      - office.Excel.Functions.abs
      - office.Excel.Functions.accrInt
      - office.Excel.Functions.accrIntM
      - office.Excel.Functions.acos
      - office.Excel.Functions.acosh
      - office.Excel.Functions.acot
      - office.Excel.Functions.acoth
      - office.Excel.Functions.amorDegrc
      - office.Excel.Functions.amorLinc
      - office.Excel.Functions.and
      - office.Excel.Functions.arabic
      - office.Excel.Functions.areas
      - office.Excel.Functions.asc
      - office.Excel.Functions.asin
      - office.Excel.Functions.asinh
      - office.Excel.Functions.atan
      - office.Excel.Functions.atan2
      - office.Excel.Functions.atanh
      - office.Excel.Functions.aveDev
      - office.Excel.Functions.average
      - office.Excel.Functions.averageA
      - office.Excel.Functions.averageIf
      - office.Excel.Functions.averageIfs
      - office.Excel.Functions.bahtText
      - office.Excel.Functions.base
      - office.Excel.Functions.besselI
      - office.Excel.Functions.besselJ
      - office.Excel.Functions.besselK
      - office.Excel.Functions.besselY
      - office.Excel.Functions.beta_Dist
      - office.Excel.Functions.beta_Inv
      - office.Excel.Functions.bin2Dec
      - office.Excel.Functions.bin2Hex
      - office.Excel.Functions.bin2Oct
      - office.Excel.Functions.binom_Dist
      - office.Excel.Functions.binom_Dist_Range
      - office.Excel.Functions.binom_Inv
      - office.Excel.Functions.bitand
      - office.Excel.Functions.bitlshift
      - office.Excel.Functions.bitor
      - office.Excel.Functions.bitrshift
      - office.Excel.Functions.bitxor
      - office.Excel.Functions.ceiling_Math
      - office.Excel.Functions.ceiling_Precise
      - office.Excel.Functions.char
      - office.Excel.Functions.chiSq_Dist
      - office.Excel.Functions.chiSq_Dist_RT
      - office.Excel.Functions.chiSq_Inv
      - office.Excel.Functions.chiSq_Inv_RT
      - office.Excel.Functions.choose
      - office.Excel.Functions.clean
      - office.Excel.Functions.code
      - office.Excel.Functions.columns
      - office.Excel.Functions.combin
      - office.Excel.Functions.combina
      - office.Excel.Functions.complex
      - office.Excel.Functions.concatenate
      - office.Excel.Functions.confidence_Norm
      - office.Excel.Functions.confidence_T
      - office.Excel.Functions.convert
      - office.Excel.Functions.cos
      - office.Excel.Functions.cosh
      - office.Excel.Functions.cot
      - office.Excel.Functions.coth
      - office.Excel.Functions.count
      - office.Excel.Functions.countA
      - office.Excel.Functions.countBlank
      - office.Excel.Functions.countIf
      - office.Excel.Functions.countIfs
      - office.Excel.Functions.coupDayBs
      - office.Excel.Functions.coupDays
      - office.Excel.Functions.coupDaysNc
      - office.Excel.Functions.coupNcd
      - office.Excel.Functions.coupNum
      - office.Excel.Functions.coupPcd
      - office.Excel.Functions.csc
      - office.Excel.Functions.csch
      - office.Excel.Functions.cumIPmt
      - office.Excel.Functions.cumPrinc
      - office.Excel.Functions.date
      - office.Excel.Functions.datevalue
      - office.Excel.Functions.daverage
      - office.Excel.Functions.day
      - office.Excel.Functions.days
      - office.Excel.Functions.days360
      - office.Excel.Functions.db
      - office.Excel.Functions.dbcs
      - office.Excel.Functions.dcount
      - office.Excel.Functions.dcountA
      - office.Excel.Functions.ddb
      - office.Excel.Functions.dec2Bin
      - office.Excel.Functions.dec2Hex
      - office.Excel.Functions.dec2Oct
      - office.Excel.Functions.decimal
      - office.Excel.Functions.degrees
      - office.Excel.Functions.delta
      - office.Excel.Functions.devSq
      - office.Excel.Functions.dget
      - office.Excel.Functions.disc
      - office.Excel.Functions.dmax
      - office.Excel.Functions.dmin
      - office.Excel.Functions.dollar
      - office.Excel.Functions.dollarDe
      - office.Excel.Functions.dollarFr
      - office.Excel.Functions.dproduct
      - office.Excel.Functions.dstDev
      - office.Excel.Functions.dstDevP
      - office.Excel.Functions.dsum
      - office.Excel.Functions.duration
      - office.Excel.Functions.dvar
      - office.Excel.Functions.dvarP
      - office.Excel.Functions.ecma_Ceiling
      - office.Excel.Functions.edate
      - office.Excel.Functions.effect
      - office.Excel.Functions.eoMonth
      - office.Excel.Functions.erf
      - office.Excel.Functions.erf_Precise
      - office.Excel.Functions.erfC
      - office.Excel.Functions.erfC_Precise
      - office.Excel.Functions.error_Type
      - office.Excel.Functions.even
      - office.Excel.Functions.exact
      - office.Excel.Functions.exp
      - office.Excel.Functions.expon_Dist
      - office.Excel.Functions.f_Dist
      - office.Excel.Functions.f_Dist_RT
      - office.Excel.Functions.f_Inv
      - office.Excel.Functions.f_Inv_RT
      - office.Excel.Functions.fact
      - office.Excel.Functions.factDouble
      - office.Excel.Functions.false
      - office.Excel.Functions.find
      - office.Excel.Functions.findB
      - office.Excel.Functions.fisher
      - office.Excel.Functions.fisherInv
      - office.Excel.Functions.fixed
      - office.Excel.Functions.floor_Math
      - office.Excel.Functions.floor_Precise
      - office.Excel.Functions.fv
      - office.Excel.Functions.fvschedule
      - office.Excel.Functions.gamma
      - office.Excel.Functions.gamma_Dist
      - office.Excel.Functions.gamma_Inv
      - office.Excel.Functions.gammaLn
      - office.Excel.Functions.gammaLn_Precise
      - office.Excel.Functions.gauss
      - office.Excel.Functions.gcd
      - office.Excel.Functions.geoMean
      - office.Excel.Functions.geStep
      - office.Excel.Functions.harMean
      - office.Excel.Functions.hex2Bin
      - office.Excel.Functions.hex2Dec
      - office.Excel.Functions.hex2Oct
      - office.Excel.Functions.hlookup
      - office.Excel.Functions.hour
      - office.Excel.Functions.hyperlink
      - office.Excel.Functions.hypGeom_Dist
      - office.Excel.Functions.if
      - office.Excel.Functions.imAbs
      - office.Excel.Functions.imaginary
      - office.Excel.Functions.imArgument
      - office.Excel.Functions.imConjugate
      - office.Excel.Functions.imCos
      - office.Excel.Functions.imCosh
      - office.Excel.Functions.imCot
      - office.Excel.Functions.imCsc
      - office.Excel.Functions.imCsch
      - office.Excel.Functions.imDiv
      - office.Excel.Functions.imExp
      - office.Excel.Functions.imLn
      - office.Excel.Functions.imLog10
      - office.Excel.Functions.imLog2
      - office.Excel.Functions.imPower
      - office.Excel.Functions.imProduct
      - office.Excel.Functions.imReal
      - office.Excel.Functions.imSec
      - office.Excel.Functions.imSech
      - office.Excel.Functions.imSin
      - office.Excel.Functions.imSinh
      - office.Excel.Functions.imSqrt
      - office.Excel.Functions.imSub
      - office.Excel.Functions.imSum
      - office.Excel.Functions.imTan
      - office.Excel.Functions.int
      - office.Excel.Functions.intRate
      - office.Excel.Functions.ipmt
      - office.Excel.Functions.irr
      - office.Excel.Functions.isErr
      - office.Excel.Functions.isError
      - office.Excel.Functions.isEven
      - office.Excel.Functions.isFormula
      - office.Excel.Functions.isLogical
      - office.Excel.Functions.isNA
      - office.Excel.Functions.isNonText
      - office.Excel.Functions.isNumber
      - office.Excel.Functions.iso_Ceiling
      - office.Excel.Functions.isOdd
      - office.Excel.Functions.isoWeekNum
      - office.Excel.Functions.ispmt
      - office.Excel.Functions.isref
      - office.Excel.Functions.isText
      - office.Excel.Functions.kurt
      - office.Excel.Functions.large
      - office.Excel.Functions.lcm
      - office.Excel.Functions.left
      - office.Excel.Functions.leftb
      - office.Excel.Functions.len
      - office.Excel.Functions.lenb
      - office.Excel.Functions.ln
      - office.Excel.Functions.log
      - office.Excel.Functions.log10
      - office.Excel.Functions.logNorm_Dist
      - office.Excel.Functions.logNorm_Inv
      - office.Excel.Functions.lookup
      - office.Excel.Functions.lower
      - office.Excel.Functions.match
      - office.Excel.Functions.max
      - office.Excel.Functions.maxA
      - office.Excel.Functions.mduration
      - office.Excel.Functions.median
      - office.Excel.Functions.mid
      - office.Excel.Functions.midb
      - office.Excel.Functions.min
      - office.Excel.Functions.minA
      - office.Excel.Functions.minute
      - office.Excel.Functions.mirr
      - office.Excel.Functions.mod
      - office.Excel.Functions.month
      - office.Excel.Functions.mround
      - office.Excel.Functions.multiNomial
      - office.Excel.Functions.n
      - office.Excel.Functions.na
      - office.Excel.Functions.negBinom_Dist
      - office.Excel.Functions.networkDays
      - office.Excel.Functions.networkDays_Intl
      - office.Excel.Functions.nominal
      - office.Excel.Functions.norm_Dist
      - office.Excel.Functions.norm_Inv
      - office.Excel.Functions.norm_S_Dist
      - office.Excel.Functions.norm_S_Inv
      - office.Excel.Functions.not
      - office.Excel.Functions.now
      - office.Excel.Functions.nper
      - office.Excel.Functions.npv
      - office.Excel.Functions.numberValue
      - office.Excel.Functions.oct2Bin
      - office.Excel.Functions.oct2Dec
      - office.Excel.Functions.oct2Hex
      - office.Excel.Functions.odd
      - office.Excel.Functions.oddFPrice
      - office.Excel.Functions.oddFYield
      - office.Excel.Functions.oddLPrice
      - office.Excel.Functions.oddLYield
      - office.Excel.Functions.or
      - office.Excel.Functions.pduration
      - office.Excel.Functions.percentile_Exc
      - office.Excel.Functions.percentile_Inc
      - office.Excel.Functions.percentRank_Exc
      - office.Excel.Functions.percentRank_Inc
      - office.Excel.Functions.permut
      - office.Excel.Functions.permutationa
      - office.Excel.Functions.phi
      - office.Excel.Functions.pi
      - office.Excel.Functions.pmt
      - office.Excel.Functions.poisson_Dist
      - office.Excel.Functions.power
      - office.Excel.Functions.ppmt
      - office.Excel.Functions.price
      - office.Excel.Functions.priceDisc
      - office.Excel.Functions.priceMat
      - office.Excel.Functions.product
      - office.Excel.Functions.proper
      - office.Excel.Functions.pv
      - office.Excel.Functions.quartile_Exc
      - office.Excel.Functions.quartile_Inc
      - office.Excel.Functions.quotient
      - office.Excel.Functions.radians
      - office.Excel.Functions.rand
      - office.Excel.Functions.randBetween
      - office.Excel.Functions.rank_Avg
      - office.Excel.Functions.rank_Eq
      - office.Excel.Functions.rate
      - office.Excel.Functions.received
      - office.Excel.Functions.replace
      - office.Excel.Functions.replaceB
      - office.Excel.Functions.rept
      - office.Excel.Functions.right
      - office.Excel.Functions.rightb
      - office.Excel.Functions.roman
      - office.Excel.Functions.round
      - office.Excel.Functions.roundDown
      - office.Excel.Functions.roundUp
      - office.Excel.Functions.rows
      - office.Excel.Functions.rri
      - office.Excel.Functions.sec
      - office.Excel.Functions.sech
      - office.Excel.Functions.second
      - office.Excel.Functions.seriesSum
      - office.Excel.Functions.sheet
      - office.Excel.Functions.sheets
      - office.Excel.Functions.sign
      - office.Excel.Functions.sin
      - office.Excel.Functions.sinh
      - office.Excel.Functions.skew
      - office.Excel.Functions.skew_p
      - office.Excel.Functions.sln
      - office.Excel.Functions.small
      - office.Excel.Functions.sqrt
      - office.Excel.Functions.sqrtPi
      - office.Excel.Functions.standardize
      - office.Excel.Functions.stDev_P
      - office.Excel.Functions.stDev_S
      - office.Excel.Functions.stDevA
      - office.Excel.Functions.stDevPA
      - office.Excel.Functions.substitute
      - office.Excel.Functions.subtotal
      - office.Excel.Functions.sum
      - office.Excel.Functions.sumIf
      - office.Excel.Functions.sumIfs
      - office.Excel.Functions.sumSq
      - office.Excel.Functions.syd
      - office.Excel.Functions.t
      - office.Excel.Functions.t_Dist
      - office.Excel.Functions.t_Dist_2T
      - office.Excel.Functions.t_Dist_RT
      - office.Excel.Functions.t_Inv
      - office.Excel.Functions.t_Inv_2T
      - office.Excel.Functions.tan
      - office.Excel.Functions.tanh
      - office.Excel.Functions.tbillEq
      - office.Excel.Functions.tbillPrice
      - office.Excel.Functions.tbillYield
      - office.Excel.Functions.text
      - office.Excel.Functions.time
      - office.Excel.Functions.timevalue
      - office.Excel.Functions.today
      - office.Excel.Functions.toJSON
      - office.Excel.Functions.trim
      - office.Excel.Functions.trimMean
      - office.Excel.Functions.true
      - office.Excel.Functions.trunc
      - office.Excel.Functions.type
      - office.Excel.Functions.unichar
      - office.Excel.Functions.unicode
      - office.Excel.Functions.upper
      - office.Excel.Functions.usdollar
      - office.Excel.Functions.value
      - office.Excel.Functions.var_P
      - office.Excel.Functions.var_S
      - office.Excel.Functions.varA
      - office.Excel.Functions.varPA
      - office.Excel.Functions.vdb
      - office.Excel.Functions.vlookup
      - office.Excel.Functions.weekday
      - office.Excel.Functions.weekNum
      - office.Excel.Functions.weibull_Dist
      - office.Excel.Functions.workDay
      - office.Excel.Functions.workDay_Intl
      - office.Excel.Functions.xirr
      - office.Excel.Functions.xnpv
      - office.Excel.Functions.xor
      - office.Excel.Functions.year
      - office.Excel.Functions.yearFrac
      - office.Excel.Functions.yield
      - office.Excel.Functions.yieldDisc
      - office.Excel.Functions.yieldMat
      - office.Excel.Functions.z_Test
  - uid: office.Excel.Functions.abs
    summary: |-
      Returns the absolute value of a number, a number without its sign.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: abs(number)
    fullName: office.Excel.Functions.abs
    langs:
      - typeScript
    type: method
    syntax:
      content: 'abs(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the real number for which you want the absolute value.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.accrInt
    summary: |-
      Returns the accrued interest for a security that pays periodic interest.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'accrInt(issue, firstInterest, settlement, rate, par, frequency, basis, calcMethod)'
    fullName: office.Excel.Functions.accrInt
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        accrInt(issue: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        firstInterest: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, rate:
        number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, par: number | string
        | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, frequency: number | string | boolean
        | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, calcMethod?: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: issue
          description: 'Is the security''s issue date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: firstInterest
          description: 'Is the security''s first interest date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: settlement
          description: 'Is the security''s settlement date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: rate
          description: Is the security's annual coupon rate.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: par
          description: Is the security's par value.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: frequency
          description: Is the number of coupon payments per year.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: basis
          description: Is the type of day count basis to use.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: calcMethod
          description: >-
            Is a logical value: to accrued interest from issue date = TRUE or omitted; to calculate from last coupon
            payment date = FALSE.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.accrIntM
    summary: |-
      Returns the accrued interest for a security that pays interest at maturity.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'accrIntM(issue, settlement, rate, par, basis)'
    fullName: office.Excel.Functions.accrIntM
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        accrIntM(issue: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, rate:
        number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, par: number | string
        | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: issue
          description: 'Is the security''s issue date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: settlement
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: rate
          description: Is the security's annual coupon rate.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: par
          description: Is the security's par value.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: basis
          description: Is the type of day count basis to use.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.acos
    summary: >-
      Returns the arccosine of a number, in radians in the range 0 to Pi. The arccosine is the angle whose cosine is
      Number.


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: acos(number)
    fullName: office.Excel.Functions.acos
    langs:
      - typeScript
    type: method
    syntax:
      content: 'acos(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the cosine of the angle you want and must be from -1 to 1.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.acosh
    summary: |-
      Returns the inverse hyperbolic cosine of a number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: acosh(number)
    fullName: office.Excel.Functions.acosh
    langs:
      - typeScript
    type: method
    syntax:
      content: 'acosh(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is any real number equal to or greater than 1.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.acot
    summary: |-
      Returns the arccotangent of a number, in radians in the range 0 to Pi.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: acot(number)
    fullName: office.Excel.Functions.acot
    langs:
      - typeScript
    type: method
    syntax:
      content: 'acot(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the cotangent of the angle you want.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.acoth
    summary: |-
      Returns the inverse hyperbolic cotangent of a number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: acoth(number)
    fullName: office.Excel.Functions.acoth
    langs:
      - typeScript
    type: method
    syntax:
      content: 'acoth(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the hyperbolic cotangent of the angle that you want.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.amorDegrc
    summary: |-
      Returns the prorated linear depreciation of an asset for each accounting period.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'amorDegrc(cost, datePurchased, firstPeriod, salvage, period, rate, basis)'
    fullName: office.Excel.Functions.amorDegrc
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        amorDegrc(cost: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        datePurchased: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        firstPeriod: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        salvage: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, period:
        number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, rate: number |
        string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string |
        boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: cost
          description: Is the cost of the asset.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: datePurchased
          description: Is the date the asset is purchased.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: firstPeriod
          description: Is the date of the end of the first period.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: salvage
          description: Is the salvage value at the end of life of the asset.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: period
          description: Is the period.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: rate
          description: Is the rate of depreciation.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: basis
          description: 'Year\_basis : 0 for year of 360 days, 1 for actual, 3 for year of 365 days.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.amorLinc
    summary: |-
      Returns the prorated linear depreciation of an asset for each accounting period.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'amorLinc(cost, datePurchased, firstPeriod, salvage, period, rate, basis)'
    fullName: office.Excel.Functions.amorLinc
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        amorLinc(cost: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        datePurchased: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        firstPeriod: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        salvage: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, period:
        number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, rate: number |
        string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string |
        boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: cost
          description: Is the cost of the asset.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: datePurchased
          description: Is the date the asset is purchased.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: firstPeriod
          description: Is the date of the end of the first period.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: salvage
          description: Is the salvage value at the end of life of the asset.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: period
          description: Is the period.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: rate
          description: Is the rate of depreciation.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: basis
          description: 'Year\_basis : 0 for year of 360 days, 1 for actual, 3 for year of 365 days.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.and
    summary: |-
      Checks whether all arguments are TRUE, and returns TRUE if all arguments are TRUE.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: and(values)
    fullName: office.Excel.Functions.and
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        and(...values: Array<boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<boolean>;
      return:
        type:
          - FunctionResult<boolean>
        description: ''
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 conditions you want to test that can be either TRUE or FALSE
            and can be logical values, arrays, or references.
          type:
            - Array<boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>
  - uid: office.Excel.Functions.arabic
    summary: |-
      Converts a Roman numeral to Arabic.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: arabic(text)
    fullName: office.Excel.Functions.arabic
    langs:
      - typeScript
    type: method
    syntax:
      content: 'arabic(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: text
          description: Is the Roman numeral you want to convert.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.areas
    summary: |-
      Returns the number of areas in a reference. An area is a range of contiguous cells or a single cell.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: areas(reference)
    fullName: office.Excel.Functions.areas
    langs:
      - typeScript
    type: method
    syntax:
      content: 'areas(reference: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: reference
          description: Is a reference to a cell or range of cells and can refer to multiple areas.
          type:
            - Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.asc
    summary: >-
      Changes full-width (double-byte) characters to half-width (single-byte) characters. Use with double-byte character
      sets (DBCS).


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: asc(text)
    fullName: office.Excel.Functions.asc
    langs:
      - typeScript
    type: method
    syntax:
      content: 'asc(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;'
      return:
        type:
          - FunctionResult<string>
        description: ''
      parameters:
        - id: text
          description: 'Is a text, or a reference to a cell containing a text.'
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.asin
    summary: |-
      Returns the arcsine of a number in radians, in the range -Pi/2 to Pi/2.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: asin(number)
    fullName: office.Excel.Functions.asin
    langs:
      - typeScript
    type: method
    syntax:
      content: 'asin(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the sine of the angle you want and must be from -1 to 1.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.asinh
    summary: |-
      Returns the inverse hyperbolic sine of a number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: asinh(number)
    fullName: office.Excel.Functions.asinh
    langs:
      - typeScript
    type: method
    syntax:
      content: 'asinh(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is any real number equal to or greater than 1.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.atan
    summary: |-
      Returns the arctangent of a number in radians, in the range -Pi/2 to Pi/2.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: atan(number)
    fullName: office.Excel.Functions.atan
    langs:
      - typeScript
    type: method
    syntax:
      content: 'atan(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the tangent of the angle you want.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.atan2
    summary: |-
      Returns the arctangent of the specified x- and y- coordinates, in radians between -Pi and Pi, excluding -Pi.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'atan2(xNum, yNum)'
    fullName: office.Excel.Functions.atan2
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        atan2(xNum: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, yNum: number | Excel.Range
        | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: xNum
          description: Is the x-coordinate of the point.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: yNum
          description: Is the y-coordinate of the point.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.atanh
    summary: |-
      Returns the inverse hyperbolic tangent of a number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: atanh(number)
    fullName: office.Excel.Functions.atanh
    langs:
      - typeScript
    type: method
    syntax:
      content: 'atanh(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is any real number between -1 and 1 excluding -1 and 1.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.aveDev
    summary: >-
      Returns the average of the absolute deviations of data points from their mean. Arguments can be numbers or names,
      arrays, or references that contain numbers.


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: aveDev(values)
    fullName: office.Excel.Functions.aveDev
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        aveDev(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 arguments for which you want the average of the absolute
            deviations.
          type:
            - Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>
  - uid: office.Excel.Functions.average
    summary: >-
      Returns the average (arithmetic mean) of its arguments, which can be numbers or names, arrays, or references that
      contain numbers.


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: average(values)
    fullName: office.Excel.Functions.average
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        average(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: values
          description: 'List of parameters, whose elements are 1 to 255 numeric arguments for which you want the average.'
          type:
            - Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>
  - uid: office.Excel.Functions.averageA
    summary: >-
      Returns the average (arithmetic mean) of its arguments, evaluating text and FALSE in arguments as 0; TRUE
      evaluates as 1. Arguments can be numbers, names, arrays, or references.


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: averageA(values)
    fullName: office.Excel.Functions.averageA
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        averageA(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: values
          description: 'List of parameters, whose elements are 1 to 255 arguments for which you want the average.'
          type:
            - Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>
  - uid: office.Excel.Functions.averageIf
    summary: |-
      Finds average(arithmetic mean) for the cells specified by a given condition or criteria.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'averageIf(range, criteria, averageRange)'
    fullName: office.Excel.Functions.averageIf
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        averageIf(range: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: number | string |
        boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, averageRange?: Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: range
          description: Is the range of cells you want evaluated.
          type:
            - Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: criteria
          description: >-
            Is the condition or criteria in the form of a number, expression, or text that defines which cells will be
            used to find the average.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: averageRange
          description: 'Are the actual cells to be used to find the average. If omitted, the cells in range are used.'
          type:
            - Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.averageIfs
    summary: |-
      Finds average(arithmetic mean) for the cells specified by a given set of conditions or criteria.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'averageIfs(averageRange, values)'
    fullName: office.Excel.Functions.averageIfs
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        averageIfs(averageRange: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, ...values:
        Array<Excel.Range | Excel.RangeReference | Excel.FunctionResult<any> | number | string | boolean>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: averageRange
          description: Are the actual cells to be used to find the average.
          type:
            - Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: values
          description: >-
            List of parameters, where the first element of each pair is the Is the range of cells you want evaluated for
            the particular condition , and the second element is is the condition or criteria in the form of a number,
            expression, or text that defines which cells will be used to find the average.
          type:
            - Array<Excel.Range | Excel.RangeReference | Excel.FunctionResult<any> | number | string | boolean>
  - uid: office.Excel.Functions.bahtText
    summary: |-
      Converts a number to text (baht).

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: bahtText(number)
    fullName: office.Excel.Functions.bahtText
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        bahtText(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<string>;
      return:
        type:
          - FunctionResult<string>
        description: ''
      parameters:
        - id: number
          description: Is a number that you want to convert.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.base
    summary: |-
      Converts a number into a text representation with the given radix (base).

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'base(number, radix, minLength)'
    fullName: office.Excel.Functions.base
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        base(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, radix: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, minLength?: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;
      return:
        type:
          - FunctionResult<string>
        description: ''
      parameters:
        - id: number
          description: Is the number that you want to convert.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: radix
          description: Is the base Radix that you want to convert the number into.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: minLength
          description: Is the minimum length of the returned string. If omitted leading zeros are not added.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.besselI
    summary: |-
      Returns the modified Bessel function In(x).

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'besselI(x, n)'
    fullName: office.Excel.Functions.besselI
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        besselI(x: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, n: number
        | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: x
          description: Is the value at which to evaluate the function.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: 'n'
          description: Is the order of the Bessel function.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.besselJ
    summary: |-
      Returns the Bessel function Jn(x).

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'besselJ(x, n)'
    fullName: office.Excel.Functions.besselJ
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        besselJ(x: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, n: number
        | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: x
          description: Is the value at which to evaluate the function.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: 'n'
          description: Is the order of the Bessel function.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.besselK
    summary: |-
      Returns the modified Bessel function Kn(x).

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'besselK(x, n)'
    fullName: office.Excel.Functions.besselK
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        besselK(x: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, n: number
        | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: x
          description: Is the value at which to evaluate the function.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: 'n'
          description: Is the order of the function.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.besselY
    summary: |-
      Returns the Bessel function Yn(x).

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'besselY(x, n)'
    fullName: office.Excel.Functions.besselY
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        besselY(x: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, n: number
        | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: x
          description: Is the value at which to evaluate the function.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: 'n'
          description: Is the order of the function.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.beta_Dist
    summary: |-
      Returns the beta probability distribution function.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'beta_Dist(x, alpha, beta, cumulative, A, B)'
    fullName: office.Excel.Functions.beta_Dist
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        beta_Dist(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, alpha: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, beta: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, cumulative: boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, A?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, B?:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: x
          description: Is the value between A and B at which to evaluate the function.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: alpha
          description: Is a parameter to the distribution and must be greater than 0.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: beta
          description: Is a parameter to the distribution and must be greater than 0.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: cumulative
          description: >-
            Is a logical value: for the cumulative distribution function, use TRUE; for the probability density
            function, use FALSE.
          type:
            - boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: A
          description: 'Is an optional lower bound to the interval of x. If omitted, A = 0.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: B
          description: 'Is an optional upper bound to the interval of x. If omitted, B = 1.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.beta_Inv
    summary: |-
      Returns the inverse of the cumulative beta probability density function (BETA.DIST).

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'beta_Inv(probability, alpha, beta, A, B)'
    fullName: office.Excel.Functions.beta_Inv
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        beta_Inv(probability: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, alpha: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, beta: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, A?: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, B?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: probability
          description: Is a probability associated with the beta distribution.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: alpha
          description: Is a parameter to the distribution and must be greater than 0.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: beta
          description: Is a parameter to the distribution and must be greater than 0.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: A
          description: 'Is an optional lower bound to the interval of x. If omitted, A = 0.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: B
          description: 'Is an optional upper bound to the interval of x. If omitted, B = 1.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.bin2Dec
    summary: |-
      Converts a binary number to decimal.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: bin2Dec(number)
    fullName: office.Excel.Functions.bin2Dec
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        bin2Dec(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the binary number you want to convert.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.bin2Hex
    summary: |-
      Converts a binary number to hexadecimal.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'bin2Hex(number, places)'
    fullName: office.Excel.Functions.bin2Hex
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        bin2Hex(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        places?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the binary number you want to convert.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: places
          description: Is the number of characters to use.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.bin2Oct
    summary: |-
      Converts a binary number to octal.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'bin2Oct(number, places)'
    fullName: office.Excel.Functions.bin2Oct
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        bin2Oct(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        places?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the binary number you want to convert.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: places
          description: Is the number of characters to use.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.binom_Dist
    summary: |-
      Returns the individual term binomial distribution probability.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'binom_Dist(numberS, trials, probabilityS, cumulative)'
    fullName: office.Excel.Functions.binom_Dist
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        binom_Dist(numberS: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, trials: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, probabilityS: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, cumulative: boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: numberS
          description: Is the number of successes in trials.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: trials
          description: Is the number of independent trials.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: probabilityS
          description: Is the probability of success on each trial.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: cumulative
          description: >-
            Is a logical value: for the cumulative distribution function, use TRUE; for the probability mass function,
            use FALSE.
          type:
            - boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.binom_Dist_Range
    summary: |-
      Returns the probability of a trial result using a binomial distribution.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'binom_Dist_Range(trials, probabilityS, numberS, numberS2)'
    fullName: office.Excel.Functions.binom_Dist_Range
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        binom_Dist_Range(trials: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, probabilityS:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numberS: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, numberS2?: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: trials
          description: Is the number of independent trials.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: probabilityS
          description: Is the probability of success on each trial.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: numberS
          description: Is the number of successes in trials.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: numberS2
          description: >-
            If provided this function returns the probability that the number of successful trials shall lie between
            numberS and numberS2.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.binom_Inv
    summary: >-
      Returns the smallest value for which the cumulative binomial distribution is greater than or equal to a criterion
      value.


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'binom_Inv(trials, probabilityS, alpha)'
    fullName: office.Excel.Functions.binom_Inv
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        binom_Inv(trials: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, probabilityS: number
        | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, alpha: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: trials
          description: Is the number of Bernoulli trials.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: probabilityS
          description: 'Is the probability of success on each trial, a number between 0 and 1 inclusive.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: alpha
          description: 'Is the criterion value, a number between 0 and 1 inclusive.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.bitand
    summary: |-
      Returns a bitwise 'And' of two numbers.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'bitand(number1, number2)'
    fullName: office.Excel.Functions.bitand
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        bitand(number1: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, number2: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number1
          description: Is the decimal representation of the binary number you want to evaluate.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: number2
          description: Is the decimal representation of the binary number you want to evaluate.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.bitlshift
    summary: |-
      Returns a number shifted left by shift\_amount bits.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'bitlshift(number, shiftAmount)'
    fullName: office.Excel.Functions.bitlshift
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        bitlshift(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, shiftAmount: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the decimal representation of the binary number you want to evaluate.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: shiftAmount
          description: Is the number of bits that you want to shift Number left by.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.bitor
    summary: |-
      Returns a bitwise 'Or' of two numbers.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'bitor(number1, number2)'
    fullName: office.Excel.Functions.bitor
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        bitor(number1: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, number2: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number1
          description: Is the decimal representation of the binary number you want to evaluate.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: number2
          description: Is the decimal representation of the binary number you want to evaluate.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.bitrshift
    summary: |-
      Returns a number shifted right by shift\_amount bits.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'bitrshift(number, shiftAmount)'
    fullName: office.Excel.Functions.bitrshift
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        bitrshift(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, shiftAmount: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the decimal representation of the binary number you want to evaluate.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: shiftAmount
          description: Is the number of bits that you want to shift Number right by.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.bitxor
    summary: |-
      Returns a bitwise 'Exclusive Or' of two numbers.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'bitxor(number1, number2)'
    fullName: office.Excel.Functions.bitxor
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        bitxor(number1: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, number2: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number1
          description: Is the decimal representation of the binary number you want to evaluate.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: number2
          description: Is the decimal representation of the binary number you want to evaluate.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.ceiling_Math
    summary: |-
      Rounds a number up, to the nearest integer or to the nearest multiple of significance.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'ceiling_Math(number, significance, mode)'
    fullName: office.Excel.Functions.ceiling_Math
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        ceiling_Math(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, significance?:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, mode?: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the value you want to round.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: significance
          description: Is the multiple to which you want to round.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: mode
          description: When given and nonzero this function will round away from zero.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.ceiling_Precise
    summary: |-
      Rounds a number up, to the nearest integer or to the nearest multiple of significance.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'ceiling_Precise(number, significance)'
    fullName: office.Excel.Functions.ceiling_Precise
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        ceiling_Precise(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, significance?:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the value you want to round.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: significance
          description: Is the multiple to which you want to round.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.char
    summary: |-
      Returns the character specified by the code number from the character set for your computer.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: char(number)
    fullName: office.Excel.Functions.char
    langs:
      - typeScript
    type: method
    syntax:
      content: 'char(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;'
      return:
        type:
          - FunctionResult<string>
        description: ''
      parameters:
        - id: number
          description: Is a number between 1 and 255 specifying which character you want.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.chiSq_Dist
    summary: |-
      Returns the left-tailed probability of the chi-squared distribution.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'chiSq_Dist(x, degFreedom, cumulative)'
    fullName: office.Excel.Functions.chiSq_Dist
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        chiSq_Dist(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, degFreedom: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, cumulative: boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: x
          description: 'Is the value at which you want to evaluate the distribution, a nonnegative number.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: degFreedom
          description: 'Is the number of degrees of freedom, a number between 1 and 10^10, excluding 10^10.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: cumulative
          description: >-
            Is a logical value for the function to return: the cumulative distribution function = TRUE; the probability
            density function = FALSE.
          type:
            - boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.chiSq_Dist_RT
    summary: |-
      Returns the right-tailed probability of the chi-squared distribution.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'chiSq_Dist_RT(x, degFreedom)'
    fullName: office.Excel.Functions.chiSq_Dist_RT
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        chiSq_Dist_RT(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, degFreedom: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: x
          description: 'Is the value at which you want to evaluate the distribution, a nonnegative number.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: degFreedom
          description: 'Is the number of degrees of freedom, a number between 1 and 10^10, excluding 10^10.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.chiSq_Inv
    summary: |-
      Returns the inverse of the left-tailed probability of the chi-squared distribution.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'chiSq_Inv(probability, degFreedom)'
    fullName: office.Excel.Functions.chiSq_Inv
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        chiSq_Inv(probability: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, degFreedom:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: probability
          description: 'Is a probability associated with the chi-squared distribution, a value between 0 and 1 inclusive.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: degFreedom
          description: 'Is the number of degrees of freedom, a number between 1 and 10^10, excluding 10^10.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.chiSq_Inv_RT
    summary: |-
      Returns the inverse of the right-tailed probability of the chi-squared distribution.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'chiSq_Inv_RT(probability, degFreedom)'
    fullName: office.Excel.Functions.chiSq_Inv_RT
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        chiSq_Inv_RT(probability: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, degFreedom:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: probability
          description: 'Is a probability associated with the chi-squared distribution, a value between 0 and 1 inclusive.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: degFreedom
          description: 'Is the number of degrees of freedom, a number between 1 and 10^10, excluding 10^10.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.choose
    summary: |-
      Chooses a value or action to perform from a list of values, based on an index number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'choose(indexNum, values)'
    fullName: office.Excel.Functions.choose
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        choose(indexNum: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, ...values:
        Array<Excel.Range | number | string | boolean | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number | string | boolean>;
      return:
        type:
          - FunctionResult<number | string | boolean>
        description: ''
      parameters:
        - id: indexNum
          description: >-
            Specifies which value argument is selected. indexNum must be between 1 and 254, or a formula or a reference
            to a number between 1 and 254.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 254 numbers, cell references, defined names, formulas,
            functions, or text arguments from which CHOOSE selects.
          type:
            - Array<Excel.Range | number | string | boolean | Excel.RangeReference | Excel.FunctionResult<any>>
  - uid: office.Excel.Functions.clean
    summary: |-
      Removes all nonprintable characters from text.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: clean(text)
    fullName: office.Excel.Functions.clean
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clean(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;'
      return:
        type:
          - FunctionResult<string>
        description: ''
      parameters:
        - id: text
          description: Is any worksheet information from which you want to remove nonprintable characters.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.code
    summary: |-
      Returns a numeric code for the first character in a text string, in the character set used by your computer.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: code(text)
    fullName: office.Excel.Functions.code
    langs:
      - typeScript
    type: method
    syntax:
      content: 'code(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: text
          description: Is the text for which you want the code of the first character.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.columns
    summary: |-
      Returns the number of columns in an array or reference.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: columns(array)
    fullName: office.Excel.Functions.columns
    langs:
      - typeScript
    type: method
    syntax:
      content: 'columns(array: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: array
          description: 'Is an array or array formula, or a reference to a range of cells for which you want the number of columns.'
          type:
            - Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.combin
    summary: |-
      Returns the number of combinations for a given number of items.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'combin(number, numberChosen)'
    fullName: office.Excel.Functions.combin
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        combin(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numberChosen: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the total number of items.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: numberChosen
          description: Is the number of items in each combination.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.combina
    summary: |-
      Returns the number of combinations with repetitions for a given number of items.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'combina(number, numberChosen)'
    fullName: office.Excel.Functions.combina
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        combina(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numberChosen: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the total number of items.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: numberChosen
          description: Is the number of items in each combination.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.complex
    summary: |-
      Converts real and imaginary coefficients into a complex number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'complex(realNum, iNum, suffix)'
    fullName: office.Excel.Functions.complex
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        complex(realNum: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        iNum: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, suffix?:
        number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: realNum
          description: Is the real coefficient of the complex number.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: iNum
          description: Is the imaginary coefficient of the complex number.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: suffix
          description: Is the suffix for the imaginary component of the complex number.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.concatenate
    summary: |-
      Joins several text strings into one text string.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: concatenate(values)
    fullName: office.Excel.Functions.concatenate
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        concatenate(...values: Array<string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<string>;
      return:
        type:
          - FunctionResult<string>
        description: ''
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 text strings to be joined into a single text string and can
            be text strings, numbers, or single-cell references.
          type:
            - Array<string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>
  - uid: office.Excel.Functions.confidence_Norm
    summary: |-
      Returns the confidence interval for a population mean, using a normal distribution.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'confidence_Norm(alpha, standardDev, size)'
    fullName: office.Excel.Functions.confidence_Norm
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        confidence_Norm(alpha: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, standardDev:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, size: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: alpha
          description: 'Is the significance level used to compute the confidence level, a number greater than 0 and less than 1.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: standardDev
          description: >-
            Is the population standard deviation for the data range and is assumed to be known. standardDev must be
            greater than 0.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: size
          description: Is the sample size.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.confidence_T
    summary: |-
      Returns the confidence interval for a population mean, using a Student's T distribution.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'confidence_T(alpha, standardDev, size)'
    fullName: office.Excel.Functions.confidence_T
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        confidence_T(alpha: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, standardDev: number
        | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, size: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: alpha
          description: 'Is the significance level used to compute the confidence level, a number greater than 0 and less than 1.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: standardDev
          description: >-
            Is the population standard deviation for the data range and is assumed to be known. standardDev must be
            greater than 0.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: size
          description: Is the sample size.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.convert
    summary: |-
      Converts a number from one measurement system to another.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'convert(number, fromUnit, toUnit)'
    fullName: office.Excel.Functions.convert
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        convert(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        fromUnit: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, toUnit:
        number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the value in from\_units to convert.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: fromUnit
          description: Is the units for number.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: toUnit
          description: Is the units for the result.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.cos
    summary: |-
      Returns the cosine of an angle.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: cos(number)
    fullName: office.Excel.Functions.cos
    langs:
      - typeScript
    type: method
    syntax:
      content: 'cos(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the angle in radians for which you want the cosine.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.cosh
    summary: |-
      Returns the hyperbolic cosine of a number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: cosh(number)
    fullName: office.Excel.Functions.cosh
    langs:
      - typeScript
    type: method
    syntax:
      content: 'cosh(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is any real number.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.cot
    summary: |-
      Returns the cotangent of an angle.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: cot(number)
    fullName: office.Excel.Functions.cot
    langs:
      - typeScript
    type: method
    syntax:
      content: 'cot(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the angle in radians for which you want the cotangent.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.coth
    summary: |-
      Returns the hyperbolic cotangent of a number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: coth(number)
    fullName: office.Excel.Functions.coth
    langs:
      - typeScript
    type: method
    syntax:
      content: 'coth(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the angle in radians for which you want the hyperbolic cotangent.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.count
    summary: |-
      Counts the number of cells in a range that contain numbers.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: count(values)
    fullName: office.Excel.Functions.count
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        count(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 arguments that can contain or refer to a variety of
            different types of data, but only numbers are counted.
          type:
            - Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>
  - uid: office.Excel.Functions.countA
    summary: |-
      Counts the number of cells in a range that are not empty.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: countA(values)
    fullName: office.Excel.Functions.countA
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        countA(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 arguments representing the values and cells you want to
            count. Values can be any type of information.
          type:
            - Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>
  - uid: office.Excel.Functions.countBlank
    summary: |-
      Counts the number of empty cells in a specified range of cells.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: countBlank(range)
    fullName: office.Excel.Functions.countBlank
    langs:
      - typeScript
    type: method
    syntax:
      content: 'countBlank(range: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: range
          description: Is the range from which you want to count the empty cells.
          type:
            - Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.countIf
    summary: |-
      Counts the number of cells within a range that meet the given condition.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'countIf(range, criteria)'
    fullName: office.Excel.Functions.countIf
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        countIf(range: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: number | string |
        boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: range
          description: Is the range of cells from which you want to count nonblank cells.
          type:
            - Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: criteria
          description: 'Is the condition in the form of a number, expression, or text that defines which cells will be counted.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.countIfs
    summary: |-
      Counts the number of cells specified by a given set of conditions or criteria.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: countIfs(values)
    fullName: office.Excel.Functions.countIfs
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        countIfs(...values: Array<Excel.Range | Excel.RangeReference | Excel.FunctionResult<any> | number | string |
        boolean>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: values
          description: >-
            List of parameters, where the first element of each pair is the Is the range of cells you want evaluated for
            the particular condition , and the second element is is the condition in the form of a number, expression,
            or text that defines which cells will be counted.
          type:
            - Array<Excel.Range | Excel.RangeReference | Excel.FunctionResult<any> | number | string | boolean>
  - uid: office.Excel.Functions.coupDayBs
    summary: |-
      Returns the number of days from the beginning of the coupon period to the settlement date.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'coupDayBs(settlement, maturity, frequency, basis)'
    fullName: office.Excel.Functions.coupDayBs
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        coupDayBs(settlement: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, maturity: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, frequency: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, basis?: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: settlement
          description: 'Is the security''s settlement date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: frequency
          description: Is the number of coupon payments per year.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: basis
          description: Is the type of day count basis to use.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.coupDays
    summary: |-
      Returns the number of days in the coupon period that contains the settlement date.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'coupDays(settlement, maturity, frequency, basis)'
    fullName: office.Excel.Functions.coupDays
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        coupDays(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, frequency:
        number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number |
        string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: settlement
          description: 'Is the security''s settlement date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: frequency
          description: Is the number of coupon payments per year.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: basis
          description: Is the type of day count basis to use.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.coupDaysNc
    summary: |-
      Returns the number of days from the settlement date to the next coupon date.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'coupDaysNc(settlement, maturity, frequency, basis)'
    fullName: office.Excel.Functions.coupDaysNc
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        coupDaysNc(settlement: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, maturity: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, frequency: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, basis?: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: settlement
          description: 'Is the security''s settlement date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: frequency
          description: Is the number of coupon payments per year.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: basis
          description: Is the type of day count basis to use.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.coupNcd
    summary: |-
      Returns the next coupon date after the settlement date.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'coupNcd(settlement, maturity, frequency, basis)'
    fullName: office.Excel.Functions.coupNcd
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        coupNcd(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, frequency:
        number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number |
        string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: settlement
          description: 'Is the security''s settlement date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: frequency
          description: Is the number of coupon payments per year.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: basis
          description: Is the type of day count basis to use.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.coupNum
    summary: |-
      Returns the number of coupons payable between the settlement date and maturity date.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'coupNum(settlement, maturity, frequency, basis)'
    fullName: office.Excel.Functions.coupNum
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        coupNum(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, frequency:
        number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number |
        string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: settlement
          description: 'Is the security''s settlement date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: frequency
          description: Is the number of coupon payments per year.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: basis
          description: Is the type of day count basis to use.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.coupPcd
    summary: |-
      Returns the previous coupon date before the settlement date.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'coupPcd(settlement, maturity, frequency, basis)'
    fullName: office.Excel.Functions.coupPcd
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        coupPcd(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, frequency:
        number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number |
        string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: settlement
          description: 'Is the security''s settlement date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: frequency
          description: Is the number of coupon payments per year.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: basis
          description: Is the type of day count basis to use.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.csc
    summary: |-
      Returns the cosecant of an angle.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: csc(number)
    fullName: office.Excel.Functions.csc
    langs:
      - typeScript
    type: method
    syntax:
      content: 'csc(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the angle in radians for which you want the cosecant.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.csch
    summary: |-
      Returns the hyperbolic cosecant of an angle.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: csch(number)
    fullName: office.Excel.Functions.csch
    langs:
      - typeScript
    type: method
    syntax:
      content: 'csch(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the angle in radians for which you want the hyperbolic cosecant.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.cumIPmt
    summary: |-
      Returns the cumulative interest paid between two periods.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'cumIPmt(rate, nper, pv, startPeriod, endPeriod, type)'
    fullName: office.Excel.Functions.cumIPmt
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        cumIPmt(rate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, nper:
        number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, pv: number | string
        | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, startPeriod: number | string |
        boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, endPeriod: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, type: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: rate
          description: Is the interest rate.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: nper
          description: Is the total number of payment periods.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: pv
          description: Is the present value.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: startPeriod
          description: Is the first period in the calculation.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: endPeriod
          description: Is the last period in the calculation.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: type
          description: Is the timing of the payment.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.cumPrinc
    summary: |-
      Returns the cumulative principal paid on a loan between two periods.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'cumPrinc(rate, nper, pv, startPeriod, endPeriod, type)'
    fullName: office.Excel.Functions.cumPrinc
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        cumPrinc(rate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, nper:
        number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, pv: number | string
        | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, startPeriod: number | string |
        boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, endPeriod: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, type: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: rate
          description: Is the interest rate.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: nper
          description: Is the total number of payment periods.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: pv
          description: Is the present value.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: startPeriod
          description: Is the first period in the calculation.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: endPeriod
          description: Is the last period in the calculation.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: type
          description: Is the timing of the payment.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.date
    summary: |-
      Returns the number that represents the date in Microsoft Excel date-time code.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'date(year, month, day)'
    fullName: office.Excel.Functions.date
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        date(year: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, month: number | Excel.Range
        | Excel.RangeReference | Excel.FunctionResult<any>, day: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: year
          description: Is a number from 1900 or 1904 (depending on the workbook's date system) to 9999.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: month
          description: Is a number from 1 to 12 representing the month of the year.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: day
          description: Is a number from 1 to 31 representing the day of the month.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.datevalue
    summary: |-
      Converts a date in the form of text to a number that represents the date in Microsoft Excel date-time code.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: datevalue(dateText)
    fullName: office.Excel.Functions.datevalue
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        datevalue(dateText: string | number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: dateText
          description: >-
            Is text that represents a date in a Microsoft Excel date format, between 1/1/1900 or 1/1/1904 (depending on
            the workbook's date system) and 12/31/9999.
          type:
            - string | number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.daverage
    summary: |-
      Averages the values in a column in a list or database that match conditions you specify.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'daverage(database, field, criteria)'
    fullName: office.Excel.Functions.daverage
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        daverage(database: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, field: number | string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: database
          description: Is the range of cells that makes up the list or database. A database is a list of related data.
          type:
            - Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: field
          description: >-
            Is either the label of the column in double quotation marks or a number that represents the column's
            position in the list.
          type:
            - number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: criteria
          description: >-
            Is the range of cells that contains the conditions you specify. The range includes a column label and one
            cell below the label for a condition.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.day
    summary: |-
      Returns the day of the month, a number from 1 to 31.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: day(serialNumber)
    fullName: office.Excel.Functions.day
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        day(serialNumber: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: serialNumber
          description: Is a number in the date-time code used by Microsoft Excel.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.days
    summary: |-
      Returns the number of days between the two dates.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'days(endDate, startDate)'
    fullName: office.Excel.Functions.days
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        days(endDate: string | number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, startDate:
        string | number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: endDate
          description: startDate and endDate are the two dates between which you want to know the number of days.
          type:
            - string | number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: startDate
          description: startDate and endDate are the two dates between which you want to know the number of days.
          type:
            - string | number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.days360
    summary: |-
      Returns the number of days between two dates based on a 360-day year (twelve 30-day months).

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'days360(startDate, endDate, method)'
    fullName: office.Excel.Functions.days360
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        days360(startDate: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, endDate: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, method?: boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: startDate
          description: startDate and endDate are the two dates between which you want to know the number of days.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: endDate
          description: startDate and endDate are the two dates between which you want to know the number of days.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: method
          description: 'Is a logical value specifying the calculation method: U.S. (NASD) = FALSE or omitted; European = TRUE.'
          type:
            - boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.db
    summary: |-
      Returns the depreciation of an asset for a specified period using the fixed-declining balance method.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'db(cost, salvage, life, period, month)'
    fullName: office.Excel.Functions.db
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        db(cost: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, salvage: number | Excel.Range
        | Excel.RangeReference | Excel.FunctionResult<any>, life: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, period: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        month?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: cost
          description: Is the initial cost of the asset.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: salvage
          description: Is the salvage value at the end of the life of the asset.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: life
          description: >-
            Is the number of periods over which the asset is being depreciated (sometimes called the useful life of the
            asset).
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: period
          description: Is the period for which you want to calculate the depreciation. Period must use the same units as Life.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: month
          description: 'Is the number of months in the first year. If month is omitted, it is assumed to be 12.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.dbcs
    summary: >-
      Changes half-width (single-byte) characters within a character string to full-width (double-byte) characters. Use
      with double-byte character sets (DBCS).


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: dbcs(text)
    fullName: office.Excel.Functions.dbcs
    langs:
      - typeScript
    type: method
    syntax:
      content: 'dbcs(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;'
      return:
        type:
          - FunctionResult<string>
        description: ''
      parameters:
        - id: text
          description: 'Is a text, or a reference to a cell containing a text.'
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.dcount
    summary: >-
      Counts the cells containing numbers in the field (column) of records in the database that match the conditions you
      specify.


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'dcount(database, field, criteria)'
    fullName: office.Excel.Functions.dcount
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        dcount(database: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, field: number | string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: database
          description: Is the range of cells that makes up the list or database. A database is a list of related data.
          type:
            - Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: field
          description: >-
            Is either the label of the column in double quotation marks or a number that represents the column's
            position in the list.
          type:
            - number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: criteria
          description: >-
            Is the range of cells that contains the conditions you specify. The range includes a column label and one
            cell below the label for a condition.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.dcountA
    summary: |-
      Counts nonblank cells in the field (column) of records in the database that match the conditions you specify.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'dcountA(database, field, criteria)'
    fullName: office.Excel.Functions.dcountA
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        dcountA(database: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, field: number | string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: database
          description: Is the range of cells that makes up the list or database. A database is a list of related data.
          type:
            - Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: field
          description: >-
            Is either the label of the column in double quotation marks or a number that represents the column's
            position in the list.
          type:
            - number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: criteria
          description: >-
            Is the range of cells that contains the conditions you specify. The range includes a column label and one
            cell below the label for a condition.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.ddb
    summary: >-
      Returns the depreciation of an asset for a specified period using the double-declining balance method or some
      other method you specify.


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'ddb(cost, salvage, life, period, factor)'
    fullName: office.Excel.Functions.ddb
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        ddb(cost: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, salvage: number | Excel.Range
        | Excel.RangeReference | Excel.FunctionResult<any>, life: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, period: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        factor?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: cost
          description: Is the initial cost of the asset.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: salvage
          description: Is the salvage value at the end of the life of the asset.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: life
          description: >-
            Is the number of periods over which the asset is being depreciated (sometimes called the useful life of the
            asset).
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: period
          description: Is the period for which you want to calculate the depreciation. Period must use the same units as Life.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: factor
          description: >-
            Is the rate at which the balance declines. If Factor is omitted, it is assumed to be 2 (the double-declining
            balance method).
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.dec2Bin
    summary: |-
      Converts a decimal number to binary.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'dec2Bin(number, places)'
    fullName: office.Excel.Functions.dec2Bin
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        dec2Bin(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        places?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the decimal integer you want to convert.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: places
          description: Is the number of characters to use.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.dec2Hex
    summary: |-
      Converts a decimal number to hexadecimal.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'dec2Hex(number, places)'
    fullName: office.Excel.Functions.dec2Hex
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        dec2Hex(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        places?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the decimal integer you want to convert.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: places
          description: Is the number of characters to use.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.dec2Oct
    summary: |-
      Converts a decimal number to octal.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'dec2Oct(number, places)'
    fullName: office.Excel.Functions.dec2Oct
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        dec2Oct(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        places?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the decimal integer you want to convert.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: places
          description: Is the number of characters to use.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.decimal
    summary: |-
      Converts a text representation of a number in a given base into a decimal number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'decimal(number, radix)'
    fullName: office.Excel.Functions.decimal
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        decimal(number: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, radix: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the number that you want to convert.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: radix
          description: Is the base Radix of the number you are converting.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.degrees
    summary: |-
      Converts radians to degrees.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: degrees(angle)
    fullName: office.Excel.Functions.degrees
    langs:
      - typeScript
    type: method
    syntax:
      content: 'degrees(angle: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: angle
          description: Is the angle in radians that you want to convert.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.delta
    summary: |-
      Tests whether two numbers are equal.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'delta(number1, number2)'
    fullName: office.Excel.Functions.delta
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        delta(number1: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        number2?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number1
          description: Is the first number.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: number2
          description: Is the second number.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.devSq
    summary: |-
      Returns the sum of squares of deviations of data points from their sample mean.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: devSq(values)
    fullName: office.Excel.Functions.devSq
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        devSq(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 arguments, or an array or array reference, on which you want
            DEVSQ to calculate.
          type:
            - Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>
  - uid: office.Excel.Functions.dget
    summary: |-
      Extracts from a database a single record that matches the conditions you specify.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'dget(database, field, criteria)'
    fullName: office.Excel.Functions.dget
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        dget(database: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, field: number | string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number | boolean | string>;
      return:
        type:
          - FunctionResult<number | boolean | string>
        description: ''
      parameters:
        - id: database
          description: Is the range of cells that makes up the list or database. A database is a list of related data.
          type:
            - Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: field
          description: >-
            Is either the label of the column in double quotation marks or a number that represents the column's
            position in the list.
          type:
            - number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: criteria
          description: >-
            Is the range of cells that contains the conditions you specify. The range includes a column label and one
            cell below the label for a condition.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.disc
    summary: |-
      Returns the discount rate for a security.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'disc(settlement, maturity, pr, redemption, basis)'
    fullName: office.Excel.Functions.disc
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        disc(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, pr: number
        | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, redemption: number | string
        | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: settlement
          description: 'Is the security''s settlement date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: pr
          description: Is the security's price per $100 face value.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: redemption
          description: Is the security's redemption value per $100 face value.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: basis
          description: Is the type of day count basis to use.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.dmax
    summary: |-
      Returns the largest number in the field (column) of records in the database that match the conditions you specify.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'dmax(database, field, criteria)'
    fullName: office.Excel.Functions.dmax
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        dmax(database: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, field: number | string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: database
          description: Is the range of cells that makes up the list or database. A database is a list of related data.
          type:
            - Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: field
          description: >-
            Is either the label of the column in double quotation marks or a number that represents the column's
            position in the list.
          type:
            - number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: criteria
          description: >-
            Is the range of cells that contains the conditions you specify. The range includes a column label and one
            cell below the label for a condition.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.dmin
    summary: >-
      Returns the smallest number in the field (column) of records in the database that match the conditions you
      specify.


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'dmin(database, field, criteria)'
    fullName: office.Excel.Functions.dmin
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        dmin(database: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, field: number | string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: database
          description: Is the range of cells that makes up the list or database. A database is a list of related data.
          type:
            - Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: field
          description: >-
            Is either the label of the column in double quotation marks or a number that represents the column's
            position in the list.
          type:
            - number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: criteria
          description: >-
            Is the range of cells that contains the conditions you specify. The range includes a column label and one
            cell below the label for a condition.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.dollar
    summary: |-
      Converts a number to text, using currency format.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'dollar(number, decimals)'
    fullName: office.Excel.Functions.dollar
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        dollar(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, decimals?: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;
      return:
        type:
          - FunctionResult<string>
        description: ''
      parameters:
        - id: number
          description: 'Is a number, a reference to a cell containing a number, or a formula that evaluates to a number.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: decimals
          description: >-
            Is the number of digits to the right of the decimal point. The number is rounded as necessary; if omitted,
            Decimals = 2.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.dollarDe
    summary: |-
      Converts a dollar price, expressed as a fraction, into a dollar price, expressed as a decimal number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'dollarDe(fractionalDollar, fraction)'
    fullName: office.Excel.Functions.dollarDe
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        dollarDe(fractionalDollar: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, fraction: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: fractionalDollar
          description: Is a number expressed as a fraction.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: fraction
          description: Is the integer to use in the denominator of the fraction.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.dollarFr
    summary: |-
      Converts a dollar price, expressed as a decimal number, into a dollar price, expressed as a fraction.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'dollarFr(decimalDollar, fraction)'
    fullName: office.Excel.Functions.dollarFr
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        dollarFr(decimalDollar: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, fraction: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: decimalDollar
          description: Is a decimal number.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: fraction
          description: Is the integer to use in the denominator of a fraction.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.dproduct
    summary: |-
      Multiplies the values in the field (column) of records in the database that match the conditions you specify.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'dproduct(database, field, criteria)'
    fullName: office.Excel.Functions.dproduct
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        dproduct(database: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, field: number | string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: database
          description: Is the range of cells that makes up the list or database. A database is a list of related data.
          type:
            - Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: field
          description: >-
            Is either the label of the column in double quotation marks or a number that represents the column's
            position in the list.
          type:
            - number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: criteria
          description: >-
            Is the range of cells that contains the conditions you specify. The range includes a column label and one
            cell below the label for a condition.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.dstDev
    summary: |-
      Estimates the standard deviation based on a sample from selected database entries.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'dstDev(database, field, criteria)'
    fullName: office.Excel.Functions.dstDev
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        dstDev(database: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, field: number | string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: database
          description: Is the range of cells that makes up the list or database. A database is a list of related data.
          type:
            - Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: field
          description: >-
            Is either the label of the column in double quotation marks or a number that represents the column's
            position in the list.
          type:
            - number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: criteria
          description: >-
            Is the range of cells that contains the conditions you specify. The range includes a column label and one
            cell below the label for a condition.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.dstDevP
    summary: |-
      Calculates the standard deviation based on the entire population of selected database entries.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'dstDevP(database, field, criteria)'
    fullName: office.Excel.Functions.dstDevP
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        dstDevP(database: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, field: number | string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: database
          description: Is the range of cells that makes up the list or database. A database is a list of related data.
          type:
            - Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: field
          description: >-
            Is either the label of the column in double quotation marks or a number that represents the column's
            position in the list.
          type:
            - number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: criteria
          description: >-
            Is the range of cells that contains the conditions you specify. The range includes a column label and one
            cell below the label for a condition.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.dsum
    summary: |-
      Adds the numbers in the field (column) of records in the database that match the conditions you specify.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'dsum(database, field, criteria)'
    fullName: office.Excel.Functions.dsum
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        dsum(database: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, field: number | string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: database
          description: Is the range of cells that makes up the list or database. A database is a list of related data.
          type:
            - Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: field
          description: >-
            Is either the label of the column in double quotation marks or a number that represents the column's
            position in the list.
          type:
            - number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: criteria
          description: >-
            Is the range of cells that contains the conditions you specify. The range includes a column label and one
            cell below the label for a condition.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.duration
    summary: |-
      Returns the annual duration of a security with periodic interest payments.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'duration(settlement, maturity, coupon, yld, frequency, basis)'
    fullName: office.Excel.Functions.duration
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        duration(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, coupon:
        number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, yld: number | string
        | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, frequency: number | string | boolean
        | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: settlement
          description: 'Is the security''s settlement date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: coupon
          description: Is the security's annual coupon rate.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: yld
          description: Is the security's annual yield.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: frequency
          description: Is the number of coupon payments per year.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: basis
          description: Is the type of day count basis to use.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.dvar
    summary: |-
      Estimates variance based on a sample from selected database entries.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'dvar(database, field, criteria)'
    fullName: office.Excel.Functions.dvar
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        dvar(database: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, field: number | string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: database
          description: Is the range of cells that makes up the list or database. A database is a list of related data.
          type:
            - Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: field
          description: >-
            Is either the label of the column in double quotation marks or a number that represents the column's
            position in the list.
          type:
            - number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: criteria
          description: >-
            Is the range of cells that contains the conditions you specify. The range includes a column label and one
            cell below the label for a condition.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.dvarP
    summary: |-
      Calculates variance based on the entire population of selected database entries.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'dvarP(database, field, criteria)'
    fullName: office.Excel.Functions.dvarP
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        dvarP(database: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, field: number | string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: database
          description: Is the range of cells that makes up the list or database. A database is a list of related data.
          type:
            - Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: field
          description: >-
            Is either the label of the column in double quotation marks or a number that represents the column's
            position in the list.
          type:
            - number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: criteria
          description: >-
            Is the range of cells that contains the conditions you specify. The range includes a column label and one
            cell below the label for a condition.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.ecma_Ceiling
    summary: |-
      Rounds a number up, to the nearest integer or to the nearest multiple of significance.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'ecma_Ceiling(number, significance)'
    fullName: office.Excel.Functions.ecma_Ceiling
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        ecma_Ceiling(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, significance:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the value you want to round.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: significance
          description: Is the multiple to which you want to round.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.edate
    summary: |-
      Returns the serial number of the date that is the indicated number of months before or after the start date.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'edate(startDate, months)'
    fullName: office.Excel.Functions.edate
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        edate(startDate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        months: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: startDate
          description: Is a serial date number that represents the start date.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: months
          description: Is the number of months before or after startDate.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.effect
    summary: |-
      Returns the effective annual interest rate.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'effect(nominalRate, npery)'
    fullName: office.Excel.Functions.effect
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        effect(nominalRate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        npery: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: nominalRate
          description: Is the nominal interest rate.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: npery
          description: Is the number of compounding periods per year.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.eoMonth
    summary: |-
      Returns the serial number of the last day of the month before or after a specified number of months.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'eoMonth(startDate, months)'
    fullName: office.Excel.Functions.eoMonth
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        eoMonth(startDate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        months: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: startDate
          description: Is a serial date number that represents the start date.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: months
          description: Is the number of months before or after the startDate.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.erf
    summary: |-
      Returns the error function.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'erf(lowerLimit, upperLimit)'
    fullName: office.Excel.Functions.erf
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        erf(lowerLimit: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        upperLimit?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: lowerLimit
          description: Is the lower bound for integrating ERF.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: upperLimit
          description: Is the upper bound for integrating ERF.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.erf_Precise
    summary: |-
      Returns the error function.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: erf_Precise(X)
    fullName: office.Excel.Functions.erf_Precise
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        erf_Precise(X: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: X
          description: Is the lower bound for integrating ERF.PRECISE.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.erfC
    summary: |-
      Returns the complementary error function.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: erfC(x)
    fullName: office.Excel.Functions.erfC
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        erfC(x: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: x
          description: Is the lower bound for integrating ERF.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.erfC_Precise
    summary: |-
      Returns the complementary error function.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: erfC_Precise(X)
    fullName: office.Excel.Functions.erfC_Precise
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        erfC_Precise(X: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: X
          description: Is the lower bound for integrating ERFC.PRECISE.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.error_Type
    summary: |-
      Returns a number matching an error value.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: error_Type(errorVal)
    fullName: office.Excel.Functions.error_Type
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        error_Type(errorVal: string | number | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: errorVal
          description: >-
            Is the error value for which you want the identifying number, and can be an actual error value or a
            reference to a cell containing an error value.
          type:
            - string | number | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.even
    summary: |-
      Rounds a positive number up and negative number down to the nearest even integer.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: even(number)
    fullName: office.Excel.Functions.even
    langs:
      - typeScript
    type: method
    syntax:
      content: 'even(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the value to round.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.exact
    summary: |-
      Checks whether two text strings are exactly the same, and returns TRUE or FALSE. EXACT is case-sensitive.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'exact(text1, text2)'
    fullName: office.Excel.Functions.exact
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        exact(text1: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, text2: string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<boolean>;
      return:
        type:
          - FunctionResult<boolean>
        description: ''
      parameters:
        - id: text1
          description: Is the first text string.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: text2
          description: Is the second text string.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.exp
    summary: |-
      Returns e raised to the power of a given number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: exp(number)
    fullName: office.Excel.Functions.exp
    langs:
      - typeScript
    type: method
    syntax:
      content: 'exp(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: >-
            Is the exponent applied to the base e. The constant e equals 2.71828182845904, the base of the natural
            logarithm.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.expon_Dist
    summary: |-
      Returns the exponential distribution.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'expon_Dist(x, lambda, cumulative)'
    fullName: office.Excel.Functions.expon_Dist
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        expon_Dist(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, lambda: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, cumulative: boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: x
          description: 'Is the value of the function, a nonnegative number.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: lambda
          description: 'Is the parameter value, a positive number.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: cumulative
          description: >-
            Is a logical value for the function to return: the cumulative distribution function = TRUE; the probability
            density function = FALSE.
          type:
            - boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.f_Dist
    summary: |-
      Returns the (left-tailed) F probability distribution (degree of diversity) for two data sets.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'f_Dist(x, degFreedom1, degFreedom2, cumulative)'
    fullName: office.Excel.Functions.f_Dist
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        f_Dist(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, degFreedom1: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, degFreedom2: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, cumulative: boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: x
          description: 'Is the value at which to evaluate the function, a nonnegative number.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: degFreedom1
          description: 'Is the numerator degrees of freedom, a number between 1 and 10^10, excluding 10^10.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: degFreedom2
          description: 'Is the denominator degrees of freedom, a number between 1 and 10^10, excluding 10^10.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: cumulative
          description: >-
            Is a logical value for the function to return: the cumulative distribution function = TRUE; the probability
            density function = FALSE.
          type:
            - boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.f_Dist_RT
    summary: |-
      Returns the (right-tailed) F probability distribution (degree of diversity) for two data sets.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'f_Dist_RT(x, degFreedom1, degFreedom2)'
    fullName: office.Excel.Functions.f_Dist_RT
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        f_Dist_RT(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, degFreedom1: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, degFreedom2: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: x
          description: 'Is the value at which to evaluate the function, a nonnegative number.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: degFreedom1
          description: 'Is the numerator degrees of freedom, a number between 1 and 10^10, excluding 10^10.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: degFreedom2
          description: 'Is the denominator degrees of freedom, a number between 1 and 10^10, excluding 10^10.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.f_Inv
    summary: |-
      Returns the inverse of the (left-tailed) F probability distribution: if p = F.DIST(x,...), then F.INV(p,...) = x.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'f_Inv(probability, degFreedom1, degFreedom2)'
    fullName: office.Excel.Functions.f_Inv
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        f_Inv(probability: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, degFreedom1: number
        | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, degFreedom2: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: probability
          description: 'Is a probability associated with the F cumulative distribution, a number between 0 and 1 inclusive.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: degFreedom1
          description: 'Is the numerator degrees of freedom, a number between 1 and 10^10, excluding 10^10.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: degFreedom2
          description: 'Is the denominator degrees of freedom, a number between 1 and 10^10, excluding 10^10.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.f_Inv_RT
    summary: >-
      Returns the inverse of the (right-tailed) F probability distribution: if p = F.DIST.RT(x,...), then
      F.INV.RT(p,...) = x.


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'f_Inv_RT(probability, degFreedom1, degFreedom2)'
    fullName: office.Excel.Functions.f_Inv_RT
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        f_Inv_RT(probability: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, degFreedom1:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, degFreedom2: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: probability
          description: 'Is a probability associated with the F cumulative distribution, a number between 0 and 1 inclusive.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: degFreedom1
          description: 'Is the numerator degrees of freedom, a number between 1 and 10^10, excluding 10^10.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: degFreedom2
          description: 'Is the denominator degrees of freedom, a number between 1 and 10^10, excluding 10^10.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.fact
    summary: |-
      Returns the factorial of a number, equal to 1\*2\*3\*...\* Number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: fact(number)
    fullName: office.Excel.Functions.fact
    langs:
      - typeScript
    type: method
    syntax:
      content: 'fact(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the nonnegative number you want the factorial of.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.factDouble
    summary: |-
      Returns the double factorial of a number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: factDouble(number)
    fullName: office.Excel.Functions.factDouble
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        factDouble(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the value for which to return the double factorial.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.false
    summary: |-
      Returns the logical value FALSE.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: false()
    fullName: office.Excel.Functions.false
    langs:
      - typeScript
    type: method
    syntax:
      content: 'false(): FunctionResult<boolean>;'
      return:
        type:
          - FunctionResult<boolean>
        description: ''
  - uid: office.Excel.Functions.find
    summary: |-
      Returns the starting position of one text string within another text string. FIND is case-sensitive.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'find(findText, withinText, startNum)'
    fullName: office.Excel.Functions.find
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        find(findText: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, withinText: string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, startNum?: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: findText
          description: >-
            Is the text you want to find. Use double quotes (empty text) to match the first character in withinText;
            wildcard characters not allowed.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: withinText
          description: Is the text containing the text you want to find.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: startNum
          description: >-
            Specifies the character at which to start the search. The first character in withinText is character number
            1. If omitted, startNum = 1.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.findB
    summary: >-
      Finds the starting position of one text string within another text string. FINDB is case-sensitive. Use with
      double-byte character sets (DBCS).


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'findB(findText, withinText, startNum)'
    fullName: office.Excel.Functions.findB
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        findB(findText: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, withinText: string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, startNum?: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: findText
          description: Is the text you want to find.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: withinText
          description: Is the text containing the text you want to find.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: startNum
          description: Specifies the character at which to start the search.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.fisher
    summary: |-
      Returns the Fisher transformation.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: fisher(x)
    fullName: office.Excel.Functions.fisher
    langs:
      - typeScript
    type: method
    syntax:
      content: 'fisher(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: x
          description: 'Is the value for which you want the transformation, a number between -1 and 1, excluding -1 and 1.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.fisherInv
    summary: |-
      Returns the inverse of the Fisher transformation: if y = FISHER(x), then FISHERINV(y) = x.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: fisherInv(y)
    fullName: office.Excel.Functions.fisherInv
    langs:
      - typeScript
    type: method
    syntax:
      content: 'fisherInv(y: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: 'y'
          description: Is the value for which you want to perform the inverse of the transformation.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.fixed
    summary: |-
      Rounds a number to the specified number of decimals and returns the result as text with or without commas.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'fixed(number, decimals, noCommas)'
    fullName: office.Excel.Functions.fixed
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        fixed(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, decimals?: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, noCommas?: boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;
      return:
        type:
          - FunctionResult<string>
        description: ''
      parameters:
        - id: number
          description: Is the number you want to round and convert to text.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: decimals
          description: 'Is the number of digits to the right of the decimal point. If omitted, Decimals = 2.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: noCommas
          description: >-
            Is a logical value: do not display commas in the returned text = TRUE; do display commas in the returned
            text = FALSE or omitted.
          type:
            - boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.floor_Math
    summary: |-
      Rounds a number down, to the nearest integer or to the nearest multiple of significance.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'floor_Math(number, significance, mode)'
    fullName: office.Excel.Functions.floor_Math
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        floor_Math(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, significance?:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, mode?: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the value you want to round.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: significance
          description: Is the multiple to which you want to round.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: mode
          description: When given and nonzero this function will round towards zero.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.floor_Precise
    summary: |-
      Rounds a number down, to the nearest integer or to the nearest multiple of significance.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'floor_Precise(number, significance)'
    fullName: office.Excel.Functions.floor_Precise
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        floor_Precise(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, significance?:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the numeric value you want to round.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: significance
          description: Is the multiple to which you want to round.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.fv
    summary: |-
      Returns the future value of an investment based on periodic, constant payments and a constant interest rate.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'fv(rate, nper, pmt, pv, type)'
    fullName: office.Excel.Functions.fv
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        fv(rate: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, nper: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, pmt: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, pv?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, type?:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: rate
          description: 'Is the interest rate per period. For example, use 6%/4 for quarterly payments at 6% APR.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: nper
          description: Is the total number of payment periods in the investment.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: pmt
          description: Is the payment made each period; it cannot change over the life of the investment.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: pv
          description: >-
            Is the present value, or the lump-sum amount that a series of future payments is worth now. If omitted, Pv =
            0.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: type
          description: >-
            Is a value representing the timing of payment: payment at the beginning of the period = 1; payment at the
            end of the period = 0 or omitted.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.fvschedule
    summary: |-
      Returns the future value of an initial principal after applying a series of compound interest rates.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'fvschedule(principal, schedule)'
    fullName: office.Excel.Functions.fvschedule
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        fvschedule(principal: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, schedule: number | string | Excel.Range | boolean | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: principal
          description: Is the present value.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: schedule
          description: Is an array of interest rates to apply.
          type:
            - number | string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.gamma
    summary: |-
      Returns the Gamma function value.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: gamma(x)
    fullName: office.Excel.Functions.gamma
    langs:
      - typeScript
    type: method
    syntax:
      content: 'gamma(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: x
          description: Is the value for which you want to calculate Gamma.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.gamma_Dist
    summary: |-
      Returns the gamma distribution.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'gamma_Dist(x, alpha, beta, cumulative)'
    fullName: office.Excel.Functions.gamma_Dist
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        gamma_Dist(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, alpha: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, beta: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, cumulative: boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: x
          description: 'Is the value at which you want to evaluate the distribution, a nonnegative number.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: alpha
          description: 'Is a parameter to the distribution, a positive number.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: beta
          description: >-
            Is a parameter to the distribution, a positive number. If beta = 1, GAMMA.DIST returns the standard gamma
            distribution.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: cumulative
          description: >-
            Is a logical value: return the cumulative distribution function = TRUE; return the probability mass function
            = FALSE or omitted.
          type:
            - boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.gamma_Inv
    summary: |-
      Returns the inverse of the gamma cumulative distribution: if p = GAMMA.DIST(x,...), then GAMMA.INV(p,...) = x.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'gamma_Inv(probability, alpha, beta)'
    fullName: office.Excel.Functions.gamma_Inv
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        gamma_Inv(probability: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, alpha: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, beta: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: probability
          description: 'Is the probability associated with the gamma distribution, a number between 0 and 1, inclusive.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: alpha
          description: 'Is a parameter to the distribution, a positive number.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: beta
          description: >-
            Is a parameter to the distribution, a positive number. If beta = 1, GAMMA.INV returns the inverse of the
            standard gamma distribution.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.gammaLn
    summary: |-
      Returns the natural logarithm of the gamma function.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: gammaLn(x)
    fullName: office.Excel.Functions.gammaLn
    langs:
      - typeScript
    type: method
    syntax:
      content: 'gammaLn(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: x
          description: 'Is the value for which you want to calculate GAMMALN, a positive number.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.gammaLn_Precise
    summary: |-
      Returns the natural logarithm of the gamma function.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: gammaLn_Precise(x)
    fullName: office.Excel.Functions.gammaLn_Precise
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        gammaLn_Precise(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: x
          description: 'Is the value for which you want to calculate GAMMALN.PRECISE, a positive number.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.gauss
    summary: |-
      Returns 0.5 less than the standard normal cumulative distribution.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: gauss(x)
    fullName: office.Excel.Functions.gauss
    langs:
      - typeScript
    type: method
    syntax:
      content: 'gauss(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: x
          description: Is the value for which you want the distribution.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.gcd
    summary: |-
      Returns the greatest common divisor.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: gcd(values)
    fullName: office.Excel.Functions.gcd
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        gcd(...values: Array<number | string | Excel.Range | boolean | Excel.RangeReference |
        Excel.FunctionResult<any>>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: values
          description: 'List of parameters, whose elements are 1 to 255 values.'
          type:
            - Array<number | string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>>
  - uid: office.Excel.Functions.geoMean
    summary: |-
      Returns the geometric mean of an array or range of positive numeric data.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: geoMean(values)
    fullName: office.Excel.Functions.geoMean
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        geoMean(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 numbers or names, arrays, or references that contain numbers
            for which you want the mean.
          type:
            - Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>
  - uid: office.Excel.Functions.geStep
    summary: |-
      Tests whether a number is greater than a threshold value.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'geStep(number, step)'
    fullName: office.Excel.Functions.geStep
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        geStep(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        step?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the value to test against step.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: step
          description: Is the threshold value.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.harMean
    summary: |-
      Returns the harmonic mean of a data set of positive numbers: the reciprocal of the arithmetic mean of reciprocals.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: harMean(values)
    fullName: office.Excel.Functions.harMean
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        harMean(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 numbers or names, arrays, or references that contain numbers
            for which you want the harmonic mean.
          type:
            - Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>
  - uid: office.Excel.Functions.hex2Bin
    summary: |-
      Converts a Hexadecimal number to binary.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'hex2Bin(number, places)'
    fullName: office.Excel.Functions.hex2Bin
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        hex2Bin(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        places?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the hexadecimal number you want to convert.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: places
          description: Is the number of characters to use.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.hex2Dec
    summary: |-
      Converts a hexadecimal number to decimal.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: hex2Dec(number)
    fullName: office.Excel.Functions.hex2Dec
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        hex2Dec(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the hexadecimal number you want to convert.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.hex2Oct
    summary: |-
      Converts a hexadecimal number to octal.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'hex2Oct(number, places)'
    fullName: office.Excel.Functions.hex2Oct
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        hex2Oct(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        places?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the hexadecimal number you want to convert.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: places
          description: Is the number of characters to use.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.hlookup
    summary: >-
      Looks for a value in the top row of a table or array of values and returns the value in the same column from a row
      you specify.


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'hlookup(lookupValue, tableArray, rowIndexNum, rangeLookup)'
    fullName: office.Excel.Functions.hlookup
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        hlookup(lookupValue: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        tableArray: Excel.Range | number | Excel.RangeReference | Excel.FunctionResult<any>, rowIndexNum: Excel.Range |
        number | Excel.RangeReference | Excel.FunctionResult<any>, rangeLookup?: boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number | string | boolean>;
      return:
        type:
          - FunctionResult<number | string | boolean>
        description: ''
      parameters:
        - id: lookupValue
          description: 'Is the value to be found in the first row of the table and can be a value, a reference, or a text string.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: tableArray
          description: >-
            Is a table of text, numbers, or logical values in which data is looked up. tableArray can be a reference to
            a range or a range name.
          type:
            - Excel.Range | number | Excel.RangeReference | Excel.FunctionResult<any>
        - id: rowIndexNum
          description: >-
            Is the row number in tableArray from which the matching value should be returned. The first row of values in
            the table is row 1.
          type:
            - Excel.Range | number | Excel.RangeReference | Excel.FunctionResult<any>
        - id: rangeLookup
          description: >-
            Is a logical value: to find the closest match in the top row (sorted in ascending order) = TRUE or omitted;
            find an exact match = FALSE.
          type:
            - boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.hour
    summary: |-
      Returns the hour as a number from 0 (12:00 A.M.) to 23 (11:00 P.M.).

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: hour(serialNumber)
    fullName: office.Excel.Functions.hour
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        hour(serialNumber: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: serialNumber
          description: >-
            Is a number in the date-time code used by Microsoft Excel, or text in time format, such as 16:48:00 or
            4:48:00 PM.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.hyperlink
    summary: |-
      Creates a shortcut or jump that opens a document stored on your hard drive, a network server, or on the Internet.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'hyperlink(linkLocation, friendlyName)'
    fullName: office.Excel.Functions.hyperlink
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        hyperlink(linkLocation: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, friendlyName?:
        number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number | string | boolean>;
      return:
        type:
          - FunctionResult<number | string | boolean>
        description: ''
      parameters:
        - id: linkLocation
          description: >-
            Is the text giving the path and file name to the document to be opened, a hard drive location, UNC address,
            or URL path.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: friendlyName
          description: 'Is text or a number that is displayed in the cell. If omitted, the cell displays the linkLocation text.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.hypGeom_Dist
    summary: |-
      Returns the hypergeometric distribution.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'hypGeom_Dist(sampleS, numberSample, populationS, numberPop, cumulative)'
    fullName: office.Excel.Functions.hypGeom_Dist
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        hypGeom_Dist(sampleS: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numberSample:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, populationS: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, numberPop: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, cumulative: boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: sampleS
          description: Is the number of successes in the sample.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: numberSample
          description: Is the size of the sample.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: populationS
          description: Is the number of successes in the population.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: numberPop
          description: Is the population size.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: cumulative
          description: >-
            Is a logical value: for the cumulative distribution function, use TRUE; for the probability density
            function, use FALSE.
          type:
            - boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.if
    summary: |-
      Checks whether a condition is met, and returns one value if TRUE, and another value if FALSE.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'if(logicalTest, valueIfTrue, valueIfFalse)'
    fullName: office.Excel.Functions.if
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        if(logicalTest: boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, valueIfTrue?:
        Excel.Range | number | string | boolean | Excel.RangeReference | Excel.FunctionResult<any>, valueIfFalse?:
        Excel.Range | number | string | boolean | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number | string | boolean>;
      return:
        type:
          - FunctionResult<number | string | boolean>
        description: ''
      parameters:
        - id: logicalTest
          description: Is any value or expression that can be evaluated to TRUE or FALSE.
          type:
            - boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: valueIfTrue
          description: >-
            Is the value that is returned if logicalTest is TRUE. If omitted, TRUE is returned. You can nest up to seven
            IF functions.
          type:
            - Excel.Range | number | string | boolean | Excel.RangeReference | Excel.FunctionResult<any>
        - id: valueIfFalse
          description: 'Is the value that is returned if logicalTest is FALSE. If omitted, FALSE is returned.'
          type:
            - Excel.Range | number | string | boolean | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.imAbs
    summary: |-
      Returns the absolute value (modulus) of a complex number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: imAbs(inumber)
    fullName: office.Excel.Functions.imAbs
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        imAbs(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: inumber
          description: Is a complex number for which you want the absolute value.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.imaginary
    summary: |-
      Returns the imaginary coefficient of a complex number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: imaginary(inumber)
    fullName: office.Excel.Functions.imaginary
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        imaginary(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: inumber
          description: Is a complex number for which you want the imaginary coefficient.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.imArgument
    summary: |-
      Returns the argument q, an angle expressed in radians.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: imArgument(inumber)
    fullName: office.Excel.Functions.imArgument
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        imArgument(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: inumber
          description: Is a complex number for which you want the argument.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.imConjugate
    summary: |-
      Returns the complex conjugate of a complex number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: imConjugate(inumber)
    fullName: office.Excel.Functions.imConjugate
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        imConjugate(inumber: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: inumber
          description: Is a complex number for which you want the conjugate.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.imCos
    summary: |-
      Returns the cosine of a complex number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: imCos(inumber)
    fullName: office.Excel.Functions.imCos
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        imCos(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: inumber
          description: Is a complex number for which you want the cosine.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.imCosh
    summary: |-
      Returns the hyperbolic cosine of a complex number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: imCosh(inumber)
    fullName: office.Excel.Functions.imCosh
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        imCosh(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: inumber
          description: Is a complex number for which you want the hyperbolic cosine.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.imCot
    summary: |-
      Returns the cotangent of a complex number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: imCot(inumber)
    fullName: office.Excel.Functions.imCot
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        imCot(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: inumber
          description: Is a complex number for which you want the cotangent.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.imCsc
    summary: |-
      Returns the cosecant of a complex number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: imCsc(inumber)
    fullName: office.Excel.Functions.imCsc
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        imCsc(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: inumber
          description: Is a complex number for which you want the cosecant.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.imCsch
    summary: |-
      Returns the hyperbolic cosecant of a complex number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: imCsch(inumber)
    fullName: office.Excel.Functions.imCsch
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        imCsch(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: inumber
          description: Is a complex number for which you want the hyperbolic cosecant.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.imDiv
    summary: |-
      Returns the quotient of two complex numbers.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'imDiv(inumber1, inumber2)'
    fullName: office.Excel.Functions.imDiv
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        imDiv(inumber1: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        inumber2: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: inumber1
          description: Is the complex numerator or dividend.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: inumber2
          description: Is the complex denominator or divisor.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.imExp
    summary: |-
      Returns the exponential of a complex number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: imExp(inumber)
    fullName: office.Excel.Functions.imExp
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        imExp(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: inumber
          description: Is a complex number for which you want the exponential.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.imLn
    summary: |-
      Returns the natural logarithm of a complex number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: imLn(inumber)
    fullName: office.Excel.Functions.imLn
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        imLn(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: inumber
          description: Is a complex number for which you want the natural logarithm.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.imLog10
    summary: |-
      Returns the base-10 logarithm of a complex number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: imLog10(inumber)
    fullName: office.Excel.Functions.imLog10
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        imLog10(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: inumber
          description: Is a complex number for which you want the common logarithm.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.imLog2
    summary: |-
      Returns the base-2 logarithm of a complex number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: imLog2(inumber)
    fullName: office.Excel.Functions.imLog2
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        imLog2(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: inumber
          description: Is a complex number for which you want the base-2 logarithm.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.imPower
    summary: |-
      Returns a complex number raised to an integer power.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'imPower(inumber, number)'
    fullName: office.Excel.Functions.imPower
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        imPower(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: inumber
          description: Is a complex number you want to raise to a power.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: number
          description: Is the power to which you want to raise the complex number.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.imProduct
    summary: |-
      Returns the product of 1 to 255 complex numbers.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: imProduct(values)
    fullName: office.Excel.Functions.imProduct
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        imProduct(...values: Array<Excel.Range | number | string | boolean | Excel.RangeReference |
        Excel.FunctionResult<any>>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: values
          description: 'Inumber1, Inumber2,... are from 1 to 255 complex numbers to multiply.'
          type:
            - Array<Excel.Range | number | string | boolean | Excel.RangeReference | Excel.FunctionResult<any>>
  - uid: office.Excel.Functions.imReal
    summary: |-
      Returns the real coefficient of a complex number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: imReal(inumber)
    fullName: office.Excel.Functions.imReal
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        imReal(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: inumber
          description: Is a complex number for which you want the real coefficient.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.imSec
    summary: |-
      Returns the secant of a complex number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: imSec(inumber)
    fullName: office.Excel.Functions.imSec
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        imSec(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: inumber
          description: Is a complex number for which you want the secant.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.imSech
    summary: |-
      Returns the hyperbolic secant of a complex number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: imSech(inumber)
    fullName: office.Excel.Functions.imSech
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        imSech(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: inumber
          description: Is a complex number for which you want the hyperbolic secant.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.imSin
    summary: |-
      Returns the sine of a complex number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: imSin(inumber)
    fullName: office.Excel.Functions.imSin
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        imSin(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: inumber
          description: Is a complex number for which you want the sine.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.imSinh
    summary: |-
      Returns the hyperbolic sine of a complex number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: imSinh(inumber)
    fullName: office.Excel.Functions.imSinh
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        imSinh(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: inumber
          description: Is a complex number for which you want the hyperbolic sine.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.imSqrt
    summary: |-
      Returns the square root of a complex number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: imSqrt(inumber)
    fullName: office.Excel.Functions.imSqrt
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        imSqrt(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: inumber
          description: Is a complex number for which you want the square root.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.imSub
    summary: |-
      Returns the difference of two complex numbers.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'imSub(inumber1, inumber2)'
    fullName: office.Excel.Functions.imSub
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        imSub(inumber1: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        inumber2: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: inumber1
          description: Is the complex number from which to subtract inumber2.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: inumber2
          description: Is the complex number to subtract from inumber1.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.imSum
    summary: |-
      Returns the sum of complex numbers.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: imSum(values)
    fullName: office.Excel.Functions.imSum
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        imSum(...values: Array<Excel.Range | number | string | boolean | Excel.RangeReference |
        Excel.FunctionResult<any>>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: values
          description: 'List of parameters, whose elements are from 1 to 255 complex numbers to add.'
          type:
            - Array<Excel.Range | number | string | boolean | Excel.RangeReference | Excel.FunctionResult<any>>
  - uid: office.Excel.Functions.imTan
    summary: |-
      Returns the tangent of a complex number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: imTan(inumber)
    fullName: office.Excel.Functions.imTan
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        imTan(inumber: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: inumber
          description: Is a complex number for which you want the tangent.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.int
    summary: |-
      Rounds a number down to the nearest integer.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: int(number)
    fullName: office.Excel.Functions.int
    langs:
      - typeScript
    type: method
    syntax:
      content: 'int(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the real number you want to round down to an integer.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.intRate
    summary: |-
      Returns the interest rate for a fully invested security.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'intRate(settlement, maturity, investment, redemption, basis)'
    fullName: office.Excel.Functions.intRate
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        intRate(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        investment: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        redemption: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?:
        number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: settlement
          description: 'Is the security''s settlement date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: investment
          description: Is the amount invested in the security.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: redemption
          description: Is the amount to be received at maturity.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: basis
          description: Is the type of day count basis to use.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.ipmt
    summary: >-
      Returns the interest payment for a given period for an investment, based on periodic, constant payments and a
      constant interest rate.


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'ipmt(rate, per, nper, pv, fv, type)'
    fullName: office.Excel.Functions.ipmt
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        ipmt(rate: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, per: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, nper: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, pv: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, fv?:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, type?: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: rate
          description: 'Is the interest rate per period. For example, use 6%/4 for quarterly payments at 6% APR.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: per
          description: Is the period for which you want to find the interest and must be in the range 1 to Nper.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: nper
          description: Is the total number of payment periods in an investment.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: pv
          description: 'Is the present value, or the lump-sum amount that a series of future payments is worth now.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: fv
          description: >-
            Is the future value, or a cash balance you want to attain after the last payment is made. If omitted, Fv =
            0.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: type
          description: >-
            Is a logical value representing the timing of payment: at the end of the period = 0 or omitted, at the
            beginning of the period = 1.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.irr
    summary: |-
      Returns the internal rate of return for a series of cash flows.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'irr(values, guess)'
    fullName: office.Excel.Functions.irr
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        irr(values: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, guess?: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: values
          description: >-
            Is an array or a reference to cells that contain numbers for which you want to calculate the internal rate
            of return.
          type:
            - Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: guess
          description: Is a number that you guess is close to the result of IRR; 0.1 (10 percent) if omitted.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.isErr
    summary: >-
      Checks whether a value is an error (\#VALUE!, \#REF!, \#DIV/0!, \#NUM!, \#NAME?, or \#NULL!) excluding \#N/A, and
      returns TRUE or FALSE.


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: isErr(value)
    fullName: office.Excel.Functions.isErr
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        isErr(value: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<boolean>;
      return:
        type:
          - FunctionResult<boolean>
        description: ''
      parameters:
        - id: value
          description: >-
            Is the value you want to test. Value can refer to a cell, a formula, or a name that refers to a cell,
            formula, or value.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.isError
    summary: >-
      Checks whether a value is an error (\#N/A, \#VALUE!, \#REF!, \#DIV/0!, \#NUM!, \#NAME?, or \#NULL!), and returns
      TRUE or FALSE.


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: isError(value)
    fullName: office.Excel.Functions.isError
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        isError(value: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<boolean>;
      return:
        type:
          - FunctionResult<boolean>
        description: ''
      parameters:
        - id: value
          description: >-
            Is the value you want to test. Value can refer to a cell, a formula, or a name that refers to a cell,
            formula, or value.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.isEven
    summary: |-
      Returns TRUE if the number is even.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: isEven(number)
    fullName: office.Excel.Functions.isEven
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        isEven(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the value to test.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.isFormula
    summary: |-
      Checks whether a reference is to a cell containing a formula, and returns TRUE or FALSE.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: isFormula(reference)
    fullName: office.Excel.Functions.isFormula
    langs:
      - typeScript
    type: method
    syntax:
      content: 'isFormula(reference: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<boolean>;'
      return:
        type:
          - FunctionResult<boolean>
        description: ''
      parameters:
        - id: reference
          description: >-
            Is a reference to the cell you want to test. Reference can be a cell reference, a formula, or name that
            refers to a cell.
          type:
            - Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.isLogical
    summary: |-
      Checks whether a value is a logical value (TRUE or FALSE), and returns TRUE or FALSE.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: isLogical(value)
    fullName: office.Excel.Functions.isLogical
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        isLogical(value: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<boolean>;
      return:
        type:
          - FunctionResult<boolean>
        description: ''
      parameters:
        - id: value
          description: >-
            Is the value you want to test. Value can refer to a cell, a formula, or a name that refers to a cell,
            formula, or value.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.isNA
    summary: |-
      Checks whether a value is \#N/A, and returns TRUE or FALSE.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: isNA(value)
    fullName: office.Excel.Functions.isNA
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        isNA(value: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<boolean>;
      return:
        type:
          - FunctionResult<boolean>
        description: ''
      parameters:
        - id: value
          description: >-
            Is the value you want to test. Value can refer to a cell, a formula, or a name that refers to a cell,
            formula, or value.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.isNonText
    summary: |-
      Checks whether a value is not text (blank cells are not text), and returns TRUE or FALSE.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: isNonText(value)
    fullName: office.Excel.Functions.isNonText
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        isNonText(value: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<boolean>;
      return:
        type:
          - FunctionResult<boolean>
        description: ''
      parameters:
        - id: value
          description: 'Is the value you want tested: a cell; a formula; or a name referring to a cell, formula, or value.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.isNumber
    summary: |-
      Checks whether a value is a number, and returns TRUE or FALSE.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: isNumber(value)
    fullName: office.Excel.Functions.isNumber
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        isNumber(value: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<boolean>;
      return:
        type:
          - FunctionResult<boolean>
        description: ''
      parameters:
        - id: value
          description: >-
            Is the value you want to test. Value can refer to a cell, a formula, or a name that refers to a cell,
            formula, or value.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.iso_Ceiling
    summary: |-
      Rounds a number up, to the nearest integer or to the nearest multiple of significance.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'iso_Ceiling(number, significance)'
    fullName: office.Excel.Functions.iso_Ceiling
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        iso_Ceiling(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, significance?:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the value you want to round.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: significance
          description: Is the optional multiple to which you want to round.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.isOdd
    summary: |-
      Returns TRUE if the number is odd.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: isOdd(number)
    fullName: office.Excel.Functions.isOdd
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        isOdd(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the value to test.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.isoWeekNum
    summary: |-
      Returns the ISO week number in the year for a given date.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: isoWeekNum(date)
    fullName: office.Excel.Functions.isoWeekNum
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        isoWeekNum(date: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: date
          description: Is the date-time code used by Microsoft Excel for date and time calculation.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.ispmt
    summary: |-
      Returns the interest paid during a specific period of an investment.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'ispmt(rate, per, nper, pv)'
    fullName: office.Excel.Functions.ispmt
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        ispmt(rate: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, per: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, nper: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, pv: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: rate
          description: 'Interest rate per period. For example, use 6%/4 for quarterly payments at 6% APR.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: per
          description: Period for which you want to find the interest.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: nper
          description: Number of payment periods in an investment.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: pv
          description: Lump sum amount that a series of future payments is right now.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.isref
    summary: |-
      Checks whether a value is a reference, and returns TRUE or FALSE.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: isref(value)
    fullName: office.Excel.Functions.isref
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        isref(value: Excel.Range | number | string | boolean | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<boolean>;
      return:
        type:
          - FunctionResult<boolean>
        description: ''
      parameters:
        - id: value
          description: >-
            Is the value you want to test. Value can refer to a cell, a formula, or a name that refers to a cell,
            formula, or value.
          type:
            - Excel.Range | number | string | boolean | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.isText
    summary: |-
      Checks whether a value is text, and returns TRUE or FALSE.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: isText(value)
    fullName: office.Excel.Functions.isText
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        isText(value: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<boolean>;
      return:
        type:
          - FunctionResult<boolean>
        description: ''
      parameters:
        - id: value
          description: >-
            Is the value you want to test. Value can refer to a cell, a formula, or a name that refers to a cell,
            formula, or value.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.kurt
    summary: |-
      Returns the kurtosis of a data set.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: kurt(values)
    fullName: office.Excel.Functions.kurt
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        kurt(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 numbers or names, arrays, or references that contain numbers
            for which you want the kurtosis.
          type:
            - Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>
  - uid: office.Excel.Functions.large
    summary: |-
      Returns the k-th largest value in a data set. For example, the fifth largest number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'large(array, k)'
    fullName: office.Excel.Functions.large
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        large(array: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, k: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: array
          description: Is the array or range of data for which you want to determine the k-th largest value.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: k
          description: Is the position (from the largest) in the array or cell range of the value to return.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.lcm
    summary: |-
      Returns the least common multiple.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: lcm(values)
    fullName: office.Excel.Functions.lcm
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        lcm(...values: Array<number | string | Excel.Range | boolean | Excel.RangeReference |
        Excel.FunctionResult<any>>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: values
          description: 'List of parameters, whose elements are 1 to 255 values for which you want the least common multiple.'
          type:
            - Array<number | string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>>
  - uid: office.Excel.Functions.left
    summary: |-
      Returns the specified number of characters from the start of a text string.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'left(text, numChars)'
    fullName: office.Excel.Functions.left
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        left(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numChars?: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;
      return:
        type:
          - FunctionResult<string>
        description: ''
      parameters:
        - id: text
          description: Is the text string containing the characters you want to extract.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: numChars
          description: Specifies how many characters you want LEFT to extract; 1 if omitted.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.leftb
    summary: >-
      Returns the specified number of characters from the start of a text string. Use with double-byte character sets
      (DBCS).


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'leftb(text, numBytes)'
    fullName: office.Excel.Functions.leftb
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        leftb(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numBytes?: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;
      return:
        type:
          - FunctionResult<string>
        description: ''
      parameters:
        - id: text
          description: Is the text string containing the characters you want to extract.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: numBytes
          description: Specifies how many characters you want LEFT to return.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.len
    summary: |-
      Returns the number of characters in a text string.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: len(text)
    fullName: office.Excel.Functions.len
    langs:
      - typeScript
    type: method
    syntax:
      content: 'len(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: text
          description: Is the text whose length you want to find. Spaces count as characters.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.lenb
    summary: |-
      Returns the number of characters in a text string. Use with double-byte character sets (DBCS).

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: lenb(text)
    fullName: office.Excel.Functions.lenb
    langs:
      - typeScript
    type: method
    syntax:
      content: 'lenb(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: text
          description: Is the text whose length you want to find.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.ln
    summary: |-
      Returns the natural logarithm of a number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: ln(number)
    fullName: office.Excel.Functions.ln
    langs:
      - typeScript
    type: method
    syntax:
      content: 'ln(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the positive real number for which you want the natural logarithm.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.log
    summary: |-
      Returns the logarithm of a number to the base you specify.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'log(number, base)'
    fullName: office.Excel.Functions.log
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        log(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, base?: number | Excel.Range
        | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the positive real number for which you want the logarithm.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: base
          description: Is the base of the logarithm; 10 if omitted.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.log10
    summary: |-
      Returns the base-10 logarithm of a number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: log10(number)
    fullName: office.Excel.Functions.log10
    langs:
      - typeScript
    type: method
    syntax:
      content: 'log10(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the positive real number for which you want the base-10 logarithm.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.logNorm_Dist
    summary: >-
      Returns the lognormal distribution of x, where ln(x) is normally distributed with parameters Mean and
      Standard\_dev.


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'logNorm_Dist(x, mean, standardDev, cumulative)'
    fullName: office.Excel.Functions.logNorm_Dist
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        logNorm_Dist(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, mean: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, standardDev: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, cumulative: boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: x
          description: 'Is the value at which to evaluate the function, a positive number.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: mean
          description: Is the mean of ln(x).
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: standardDev
          description: 'Is the standard deviation of ln(x), a positive number.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: cumulative
          description: >-
            Is a logical value: for the cumulative distribution function, use TRUE; for the probability density
            function, use FALSE.
          type:
            - boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.logNorm_Inv
    summary: >-
      Returns the inverse of the lognormal cumulative distribution function of x, where ln(x) is normally distributed
      with parameters Mean and Standard\_dev.


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'logNorm_Inv(probability, mean, standardDev)'
    fullName: office.Excel.Functions.logNorm_Inv
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        logNorm_Inv(probability: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, mean: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, standardDev: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: probability
          description: 'Is a probability associated with the lognormal distribution, a number between 0 and 1, inclusive.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: mean
          description: Is the mean of ln(x).
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: standardDev
          description: 'Is the standard deviation of ln(x), a positive number.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.lookup
    summary: |-
      Looks up a value either from a one-row or one-column range or from an array. Provided for backward compatibility.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'lookup(lookupValue, lookupVector, resultVector)'
    fullName: office.Excel.Functions.lookup
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        lookup(lookupValue: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        lookupVector: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, resultVector?: Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number | string | boolean>;
      return:
        type:
          - FunctionResult<number | string | boolean>
        description: ''
      parameters:
        - id: lookupValue
          description: >-
            Is a value that LOOKUP searches for in lookupVector and can be a number, text, a logical value, or a name or
            reference to a value.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: lookupVector
          description: >-
            Is a range that contains only one row or one column of text, numbers, or logical values, placed in ascending
            order.
          type:
            - Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: resultVector
          description: 'Is a range that contains only one row or column, the same size as lookupVector.'
          type:
            - Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.lower
    summary: |-
      Converts all letters in a text string to lowercase.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: lower(text)
    fullName: office.Excel.Functions.lower
    langs:
      - typeScript
    type: method
    syntax:
      content: 'lower(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;'
      return:
        type:
          - FunctionResult<string>
        description: ''
      parameters:
        - id: text
          description: Is the text you want to convert to lowercase. Characters in Text that are not letters are not changed.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.match
    summary: |-
      Returns the relative position of an item in an array that matches a specified value in a specified order.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'match(lookupValue, lookupArray, matchType)'
    fullName: office.Excel.Functions.match
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        match(lookupValue: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        lookupArray: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, matchType?: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: lookupValue
          description: >-
            Is the value you use to find the value you want in the array, a number, text, or logical value, or a
            reference to one of these.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: lookupArray
          description: >-
            Is a contiguous range of cells containing possible lookup values, an array of values, or a reference to an
            array.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: matchType
          description: 'Is a number 1, 0, or -1 indicating which value to return.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.max
    summary: |-
      Returns the largest value in a set of values. Ignores logical values and text.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: max(values)
    fullName: office.Excel.Functions.max
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        max(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 numbers, empty cells, logical values, or text numbers for
            which you want the maximum.
          type:
            - Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>
  - uid: office.Excel.Functions.maxA
    summary: |-
      Returns the largest value in a set of values. Does not ignore logical values and text.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: maxA(values)
    fullName: office.Excel.Functions.maxA
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        maxA(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 numbers, empty cells, logical values, or text numbers for
            which you want the maximum.
          type:
            - Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>
  - uid: office.Excel.Functions.mduration
    summary: |-
      Returns the Macauley modified duration for a security with an assumed par value of $100.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'mduration(settlement, maturity, coupon, yld, frequency, basis)'
    fullName: office.Excel.Functions.mduration
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        mduration(settlement: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, maturity: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, coupon: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, yld: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, frequency: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, basis?: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: settlement
          description: 'Is the security''s settlement date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: coupon
          description: Is the security's annual coupon rate.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: yld
          description: Is the security's annual yield.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: frequency
          description: Is the number of coupon payments per year.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: basis
          description: Is the type of day count basis to use.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.median
    summary: |-
      Returns the median, or the number in the middle of the set of given numbers.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: median(values)
    fullName: office.Excel.Functions.median
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        median(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 numbers or names, arrays, or references that contain numbers
            for which you want the median.
          type:
            - Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>
  - uid: office.Excel.Functions.mid
    summary: |-
      Returns the characters from the middle of a text string, given a starting position and length.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'mid(text, startNum, numChars)'
    fullName: office.Excel.Functions.mid
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        mid(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, startNum: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numChars: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;
      return:
        type:
          - FunctionResult<string>
        description: ''
      parameters:
        - id: text
          description: Is the text string from which you want to extract the characters.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: startNum
          description: Is the position of the first character you want to extract. The first character in Text is 1.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: numChars
          description: Specifies how many characters to return from Text.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.midb
    summary: >-
      Returns characters from the middle of a text string, given a starting position and length. Use with double-byte
      character sets (DBCS).


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'midb(text, startNum, numBytes)'
    fullName: office.Excel.Functions.midb
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        midb(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, startNum: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numBytes: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;
      return:
        type:
          - FunctionResult<string>
        description: ''
      parameters:
        - id: text
          description: Is the text string containing the characters you want to extract.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: startNum
          description: Is the position of the first character you want to extract in text.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: numBytes
          description: Specifies how many characters to return from text.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.min
    summary: |-
      Returns the smallest number in a set of values. Ignores logical values and text.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: min(values)
    fullName: office.Excel.Functions.min
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        min(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 numbers, empty cells, logical values, or text numbers for
            which you want the minimum.
          type:
            - Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>
  - uid: office.Excel.Functions.minA
    summary: |-
      Returns the smallest value in a set of values. Does not ignore logical values and text.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: minA(values)
    fullName: office.Excel.Functions.minA
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        minA(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 numbers, empty cells, logical values, or text numbers for
            which you want the minimum.
          type:
            - Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>
  - uid: office.Excel.Functions.minute
    summary: |-
      Returns the minute, a number from 0 to 59.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: minute(serialNumber)
    fullName: office.Excel.Functions.minute
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        minute(serialNumber: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: serialNumber
          description: >-
            Is a number in the date-time code used by Microsoft Excel or text in time format, such as 16:48:00 or
            4:48:00 PM.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.mirr
    summary: >-
      Returns the internal rate of return for a series of periodic cash flows, considering both cost of investment and
      interest on reinvestment of cash.


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'mirr(values, financeRate, reinvestRate)'
    fullName: office.Excel.Functions.mirr
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        mirr(values: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, financeRate: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, reinvestRate: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: values
          description: >-
            Is an array or a reference to cells that contain numbers that represent a series of payments (negative) and
            income (positive) at regular periods.
          type:
            - Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: financeRate
          description: Is the interest rate you pay on the money used in the cash flows.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: reinvestRate
          description: Is the interest rate you receive on the cash flows as you reinvest them.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.mod
    summary: |-
      Returns the remainder after a number is divided by a divisor.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'mod(number, divisor)'
    fullName: office.Excel.Functions.mod
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        mod(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, divisor: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the number for which you want to find the remainder after the division is performed.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: divisor
          description: Is the number by which you want to divide Number.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.month
    summary: |-
      Returns the month, a number from 1 (January) to 12 (December).

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: month(serialNumber)
    fullName: office.Excel.Functions.month
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        month(serialNumber: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: serialNumber
          description: Is a number in the date-time code used by Microsoft Excel.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.mround
    summary: |-
      Returns a number rounded to the desired multiple.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'mround(number, multiple)'
    fullName: office.Excel.Functions.mround
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        mround(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        multiple: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the value to round.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: multiple
          description: Is the multiple to which you want to round number.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.multiNomial
    summary: |-
      Returns the multinomial of a set of numbers.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: multiNomial(values)
    fullName: office.Excel.Functions.multiNomial
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        multiNomial(...values: Array<number | string | Excel.Range | boolean | Excel.RangeReference |
        Excel.FunctionResult<any>>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: values
          description: 'List of parameters, whose elements are 1 to 255 values for which you want the multinomial.'
          type:
            - Array<number | string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>>
  - uid: office.Excel.Functions.n
    summary: |-
      Converts non-number value to a number, dates to serial numbers, TRUE to 1, anything else to 0 (zero).

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: n(value)
    fullName: office.Excel.Functions.n
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        n(value: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: value
          description: Is the value you want converted.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.na
    summary: |-
      Returns the error value \#N/A (value not available).

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: na()
    fullName: office.Excel.Functions.na
    langs:
      - typeScript
    type: method
    syntax:
      content: 'na(): FunctionResult<number | string>;'
      return:
        type:
          - FunctionResult<number | string>
        description: ''
  - uid: office.Excel.Functions.negBinom_Dist
    summary: >-
      Returns the negative binomial distribution, the probability that there will be Number\_f failures before the
      Number\_s-th success, with Probability\_s probability of a success.


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'negBinom_Dist(numberF, numberS, probabilityS, cumulative)'
    fullName: office.Excel.Functions.negBinom_Dist
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        negBinom_Dist(numberF: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numberS: number
        | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, probabilityS: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, cumulative: boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: numberF
          description: Is the number of failures.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: numberS
          description: Is the threshold number of successes.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: probabilityS
          description: Is the probability of a success; a number between 0 and 1.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: cumulative
          description: >-
            Is a logical value: for the cumulative distribution function, use TRUE; for the probability mass function,
            use FALSE.
          type:
            - boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.networkDays
    summary: |-
      Returns the number of whole workdays between two dates.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'networkDays(startDate, endDate, holidays)'
    fullName: office.Excel.Functions.networkDays
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        networkDays(startDate: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, endDate: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, holidays?: number | string | Excel.Range | boolean | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: startDate
          description: Is a serial date number that represents the start date.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: endDate
          description: Is a serial date number that represents the end date.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: holidays
          description: >-
            Is an optional set of one or more serial date numbers to exclude from the working calendar, such as state
            and federal holidays and floating holidays.
          type:
            - number | string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.networkDays_Intl
    summary: |-
      Returns the number of whole workdays between two dates with custom weekend parameters.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'networkDays_Intl(startDate, endDate, weekend, holidays)'
    fullName: office.Excel.Functions.networkDays_Intl
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        networkDays_Intl(startDate: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, endDate: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, weekend?: number | string | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, holidays?: number | string | Excel.Range | boolean | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: startDate
          description: Is a serial date number that represents the start date.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: endDate
          description: Is a serial date number that represents the end date.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: weekend
          description: Is a number or string specifying when weekends occur.
          type:
            - number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: holidays
          description: >-
            Is an optional set of one or more serial date numbers to exclude from the working calendar, such as state
            and federal holidays and floating holidays.
          type:
            - number | string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.nominal
    summary: |-
      Returns the annual nominal interest rate.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'nominal(effectRate, npery)'
    fullName: office.Excel.Functions.nominal
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        nominal(effectRate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        npery: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: effectRate
          description: Is the effective interest rate.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: npery
          description: Is the number of compounding periods per year.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.norm_Dist
    summary: |-
      Returns the normal distribution for the specified mean and standard deviation.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'norm_Dist(x, mean, standardDev, cumulative)'
    fullName: office.Excel.Functions.norm_Dist
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        norm_Dist(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, mean: number | Excel.Range
        | Excel.RangeReference | Excel.FunctionResult<any>, standardDev: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, cumulative: boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: x
          description: Is the value for which you want the distribution.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: mean
          description: Is the arithmetic mean of the distribution.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: standardDev
          description: 'Is the standard deviation of the distribution, a positive number.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: cumulative
          description: >-
            Is a logical value: for the cumulative distribution function, use TRUE; for the probability density
            function, use FALSE.
          type:
            - boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.norm_Inv
    summary: |-
      Returns the inverse of the normal cumulative distribution for the specified mean and standard deviation.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'norm_Inv(probability, mean, standardDev)'
    fullName: office.Excel.Functions.norm_Inv
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        norm_Inv(probability: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, mean: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, standardDev: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: probability
          description: 'Is a probability corresponding to the normal distribution, a number between 0 and 1 inclusive.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: mean
          description: Is the arithmetic mean of the distribution.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: standardDev
          description: 'Is the standard deviation of the distribution, a positive number.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.norm_S_Dist
    summary: |-
      Returns the standard normal distribution (has a mean of zero and a standard deviation of one).

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'norm_S_Dist(z, cumulative)'
    fullName: office.Excel.Functions.norm_S_Dist
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        norm_S_Dist(z: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, cumulative: boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: z
          description: Is the value for which you want the distribution.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: cumulative
          description: >-
            Is a logical value for the function to return: the cumulative distribution function = TRUE; the probability
            density function = FALSE.
          type:
            - boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.norm_S_Inv
    summary: >-
      Returns the inverse of the standard normal cumulative distribution (has a mean of zero and a standard deviation of
      one).


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: norm_S_Inv(probability)
    fullName: office.Excel.Functions.norm_S_Inv
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        norm_S_Inv(probability: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: probability
          description: 'Is a probability corresponding to the normal distribution, a number between 0 and 1 inclusive.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.not
    summary: |-
      Changes FALSE to TRUE, or TRUE to FALSE.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: not(logical)
    fullName: office.Excel.Functions.not
    langs:
      - typeScript
    type: method
    syntax:
      content: 'not(logical: boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<boolean>;'
      return:
        type:
          - FunctionResult<boolean>
        description: ''
      parameters:
        - id: logical
          description: Is a value or expression that can be evaluated to TRUE or FALSE.
          type:
            - boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.now
    summary: |-
      Returns the current date and time formatted as a date and time.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: now()
    fullName: office.Excel.Functions.now
    langs:
      - typeScript
    type: method
    syntax:
      content: 'now(): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
  - uid: office.Excel.Functions.nper
    summary: |-
      Returns the number of periods for an investment based on periodic, constant payments and a constant interest rate.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'nper(rate, pmt, pv, fv, type)'
    fullName: office.Excel.Functions.nper
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        nper(rate: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, pmt: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, pv: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, fv?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, type?:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: rate
          description: 'Is the interest rate per period. For example, use 6%/4 for quarterly payments at 6% APR.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: pmt
          description: Is the payment made each period; it cannot change over the life of the investment.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: pv
          description: 'Is the present value, or the lump-sum amount that a series of future payments is worth now.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: fv
          description: >-
            Is the future value, or a cash balance you want to attain after the last payment is made. If omitted, zero
            is used.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: type
          description: >-
            Is a logical value: payment at the beginning of the period = 1; payment at the end of the period = 0 or
            omitted.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.npv
    summary: >-
      Returns the net present value of an investment based on a discount rate and a series of future payments (negative
      values) and income (positive values).


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'npv(rate, values)'
    fullName: office.Excel.Functions.npv
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        npv(rate: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, ...values: Array<number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: rate
          description: Is the rate of discount over the length of one period.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 254 payments and income, equally spaced in time and occurring at
            the end of each period.
          type:
            - Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>
  - uid: office.Excel.Functions.numberValue
    summary: |-
      Converts text to number in a locale-independent manner.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'numberValue(text, decimalSeparator, groupSeparator)'
    fullName: office.Excel.Functions.numberValue
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        numberValue(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, decimalSeparator?:
        string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, groupSeparator?: string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: text
          description: Is the string representing the number you want to convert.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: decimalSeparator
          description: Is the character used as the decimal separator in the string.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: groupSeparator
          description: Is the character used as the group separator in the string.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.oct2Bin
    summary: |-
      Converts an octal number to binary.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'oct2Bin(number, places)'
    fullName: office.Excel.Functions.oct2Bin
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        oct2Bin(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        places?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the octal number you want to convert.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: places
          description: Is the number of characters to use.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.oct2Dec
    summary: |-
      Converts an octal number to decimal.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: oct2Dec(number)
    fullName: office.Excel.Functions.oct2Dec
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        oct2Dec(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the octal number you want to convert.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.oct2Hex
    summary: |-
      Converts an octal number to hexadecimal.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'oct2Hex(number, places)'
    fullName: office.Excel.Functions.oct2Hex
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        oct2Hex(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        places?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the octal number you want to convert.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: places
          description: Is the number of characters to use.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.odd
    summary: |-
      Rounds a positive number up and negative number down to the nearest odd integer.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: odd(number)
    fullName: office.Excel.Functions.odd
    langs:
      - typeScript
    type: method
    syntax:
      content: 'odd(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the value to round.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.oddFPrice
    summary: |-
      Returns the price per $100 face value of a security with an odd first period.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'oddFPrice(settlement, maturity, issue, firstCoupon, rate, yld, redemption, frequency, basis)'
    fullName: office.Excel.Functions.oddFPrice
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        oddFPrice(settlement: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, maturity: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, issue: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, firstCoupon: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, rate: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, yld: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, redemption: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, frequency: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, basis?: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: settlement
          description: 'Is the security''s settlement date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: issue
          description: 'Is the security''s issue date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: firstCoupon
          description: 'Is the security''s first coupon date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: rate
          description: Is the security's interest rate.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: yld
          description: Is the security's annual yield.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: redemption
          description: Is the security's redemption value per $100 face value.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: frequency
          description: Is the number of coupon payments per year.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: basis
          description: Is the type of day count basis to use.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.oddFYield
    summary: |-
      Returns the yield of a security with an odd first period.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'oddFYield(settlement, maturity, issue, firstCoupon, rate, pr, redemption, frequency, basis)'
    fullName: office.Excel.Functions.oddFYield
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        oddFYield(settlement: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, maturity: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, issue: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, firstCoupon: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, rate: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, pr: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, redemption: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, frequency: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, basis?: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: settlement
          description: 'Is the security''s settlement date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: issue
          description: 'Is the security''s issue date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: firstCoupon
          description: 'Is the security''s first coupon date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: rate
          description: Is the security's interest rate.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: pr
          description: Is the security's price.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: redemption
          description: Is the security's redemption value per $100 face value.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: frequency
          description: Is the number of coupon payments per year.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: basis
          description: Is the type of day count basis to use.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.oddLPrice
    summary: |-
      Returns the price per $100 face value of a security with an odd last period.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'oddLPrice(settlement, maturity, lastInterest, rate, yld, redemption, frequency, basis)'
    fullName: office.Excel.Functions.oddLPrice
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        oddLPrice(settlement: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, maturity: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, lastInterest: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, rate: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, yld: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, redemption: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, frequency: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, basis?: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: settlement
          description: 'Is the security''s settlement date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: lastInterest
          description: 'Is the security''s last coupon date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: rate
          description: Is the security's interest rate.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: yld
          description: Is the security's annual yield.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: redemption
          description: Is the security's redemption value per $100 face value.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: frequency
          description: Is the number of coupon payments per year.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: basis
          description: Is the type of day count basis to use.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.oddLYield
    summary: |-
      Returns the yield of a security with an odd last period.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'oddLYield(settlement, maturity, lastInterest, rate, pr, redemption, frequency, basis)'
    fullName: office.Excel.Functions.oddLYield
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        oddLYield(settlement: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, maturity: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, lastInterest: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, rate: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, pr: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, redemption: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, frequency: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, basis?: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: settlement
          description: 'Is the security''s settlement date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: lastInterest
          description: 'Is the security''s last coupon date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: rate
          description: Is the security's interest rate.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: pr
          description: Is the security's price.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: redemption
          description: Is the security's redemption value per $100 face value.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: frequency
          description: Is the number of coupon payments per year.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: basis
          description: Is the type of day count basis to use.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.or
    summary: >-
      Checks whether any of the arguments are TRUE, and returns TRUE or FALSE. Returns FALSE only if all arguments are
      FALSE.


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: or(values)
    fullName: office.Excel.Functions.or
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        or(...values: Array<boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<boolean>;
      return:
        type:
          - FunctionResult<boolean>
        description: ''
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 conditions that you want to test that can be either TRUE or
            FALSE.
          type:
            - Array<boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>
  - uid: office.Excel.Functions.pduration
    summary: |-
      Returns the number of periods required by an investment to reach a specified value.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'pduration(rate, pv, fv)'
    fullName: office.Excel.Functions.pduration
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        pduration(rate: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, pv: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, fv: number | Excel.Range | Excel.RangeReference
        | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: rate
          description: Is the interest rate per period.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: pv
          description: Is the present value of the investment.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: fv
          description: Is the desired future value of the investment.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.percentile_Exc
    summary: |-
      Returns the k-th percentile of values in a range, where k is in the range 0..1, exclusive.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'percentile_Exc(array, k)'
    fullName: office.Excel.Functions.percentile_Exc
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        percentile_Exc(array: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, k: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: array
          description: Is the array or range of data that defines relative standing.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: k
          description: 'Is the percentile value that is between 0 through 1, inclusive.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.percentile_Inc
    summary: |-
      Returns the k-th percentile of values in a range, where k is in the range 0..1, inclusive.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'percentile_Inc(array, k)'
    fullName: office.Excel.Functions.percentile_Inc
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        percentile_Inc(array: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, k: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: array
          description: Is the array or range of data that defines relative standing.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: k
          description: 'Is the percentile value that is between 0 through 1, inclusive.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.percentRank_Exc
    summary: >-
      Returns the rank of a value in a data set as a percentage of the data set as a percentage (0..1, exclusive) of the
      data set.


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'percentRank_Exc(array, x, significance)'
    fullName: office.Excel.Functions.percentRank_Exc
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        percentRank_Exc(array: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, x: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, significance?: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: array
          description: Is the array or range of data with numeric values that defines relative standing.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: x
          description: Is the value for which you want to know the rank.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: significance
          description: >-
            Is an optional value that identifies the number of significant digits for the returned percentage, three
            digits if omitted (0.xxx%).
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.percentRank_Inc
    summary: >-
      Returns the rank of a value in a data set as a percentage of the data set as a percentage (0..1, inclusive) of the
      data set.


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'percentRank_Inc(array, x, significance)'
    fullName: office.Excel.Functions.percentRank_Inc
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        percentRank_Inc(array: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, x: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, significance?: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: array
          description: Is the array or range of data with numeric values that defines relative standing.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: x
          description: Is the value for which you want to know the rank.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: significance
          description: >-
            Is an optional value that identifies the number of significant digits for the returned percentage, three
            digits if omitted (0.xxx%).
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.permut
    summary: |-
      Returns the number of permutations for a given number of objects that can be selected from the total objects.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'permut(number, numberChosen)'
    fullName: office.Excel.Functions.permut
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        permut(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numberChosen: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the total number of objects.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: numberChosen
          description: Is the number of objects in each permutation.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.permutationa
    summary: >-
      Returns the number of permutations for a given number of objects (with repetitions) that can be selected from the
      total objects.


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'permutationa(number, numberChosen)'
    fullName: office.Excel.Functions.permutationa
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        permutationa(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numberChosen:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the total number of objects.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: numberChosen
          description: Is the number of objects in each permutation.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.phi
    summary: |-
      Returns the value of the density function for a standard normal distribution.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: phi(x)
    fullName: office.Excel.Functions.phi
    langs:
      - typeScript
    type: method
    syntax:
      content: 'phi(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: x
          description: Is the number for which you want the density of the standard normal distribution.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.pi
    summary: |-
      Returns the value of Pi, 3.14159265358979, accurate to 15 digits.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: pi()
    fullName: office.Excel.Functions.pi
    langs:
      - typeScript
    type: method
    syntax:
      content: 'pi(): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
  - uid: office.Excel.Functions.pmt
    summary: |-
      Calculates the payment for a loan based on constant payments and a constant interest rate.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'pmt(rate, nper, pv, fv, type)'
    fullName: office.Excel.Functions.pmt
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        pmt(rate: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, nper: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, pv: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, fv?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, type?:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: rate
          description: 'Is the interest rate per period for the loan. For example, use 6%/4 for quarterly payments at 6% APR.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: nper
          description: Is the total number of payments for the loan.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: pv
          description: 'Is the present value: the total amount that a series of future payments is worth now.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: fv
          description: >-
            Is the future value, or a cash balance you want to attain after the last payment is made, 0 (zero) if
            omitted.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: type
          description: >-
            Is a logical value: payment at the beginning of the period = 1; payment at the end of the period = 0 or
            omitted.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.poisson_Dist
    summary: |-
      Returns the Poisson distribution.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'poisson_Dist(x, mean, cumulative)'
    fullName: office.Excel.Functions.poisson_Dist
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        poisson_Dist(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, mean: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, cumulative: boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: x
          description: Is the number of events.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: mean
          description: 'Is the expected numeric value, a positive number.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: cumulative
          description: >-
            Is a logical value: for the cumulative Poisson probability, use TRUE; for the Poisson probability mass
            function, use FALSE.
          type:
            - boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.power
    summary: |-
      Returns the result of a number raised to a power.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'power(number, power)'
    fullName: office.Excel.Functions.power
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        power(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, power: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: 'Is the base number, any real number.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: power
          description: 'Is the exponent, to which the base number is raised.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.ppmt
    summary: >-
      Returns the payment on the principal for a given investment based on periodic, constant payments and a constant
      interest rate.


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'ppmt(rate, per, nper, pv, fv, type)'
    fullName: office.Excel.Functions.ppmt
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        ppmt(rate: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, per: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, nper: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, pv: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, fv?:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, type?: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: rate
          description: 'Is the interest rate per period. For example, use 6%/4 for quarterly payments at 6% APR.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: per
          description: Specifies the period and must be in the range 1 to nper.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: nper
          description: Is the total number of payment periods in an investment.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: pv
          description: 'Is the present value: the total amount that a series of future payments is worth now.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: fv
          description: 'Is the future value, or cash balance you want to attain after the last payment is made.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: type
          description: >-
            Is a logical value: payment at the beginning of the period = 1; payment at the end of the period = 0 or
            omitted.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.price
    summary: |-
      Returns the price per $100 face value of a security that pays periodic interest.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'price(settlement, maturity, rate, yld, redemption, frequency, basis)'
    fullName: office.Excel.Functions.price
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        price(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, rate:
        number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, yld: number | string
        | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, redemption: number | string |
        boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, frequency: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string | boolean | Excel.Range
        | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: settlement
          description: 'Is the security''s settlement date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: rate
          description: Is the security's annual coupon rate.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: yld
          description: Is the security's annual yield.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: redemption
          description: Is the security's redemption value per $100 face value.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: frequency
          description: Is the number of coupon payments per year.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: basis
          description: Is the type of day count basis to use.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.priceDisc
    summary: |-
      Returns the price per $100 face value of a discounted security.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'priceDisc(settlement, maturity, discount, redemption, basis)'
    fullName: office.Excel.Functions.priceDisc
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        priceDisc(settlement: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, maturity: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, discount: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, redemption: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, basis?: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: settlement
          description: 'Is the security''s settlement date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: discount
          description: Is the security's discount rate.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: redemption
          description: Is the security's redemption value per $100 face value.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: basis
          description: Is the type of day count basis to use.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.priceMat
    summary: |-
      Returns the price per $100 face value of a security that pays interest at maturity.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'priceMat(settlement, maturity, issue, rate, yld, basis)'
    fullName: office.Excel.Functions.priceMat
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        priceMat(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, issue:
        number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, rate: number |
        string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, yld: number | string |
        boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: settlement
          description: 'Is the security''s settlement date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: issue
          description: 'Is the security''s issue date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: rate
          description: Is the security's interest rate at date of issue.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: yld
          description: Is the security's annual yield.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: basis
          description: Is the type of day count basis to use.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.product
    summary: |-
      Multiplies all the numbers given as arguments.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: product(values)
    fullName: office.Excel.Functions.product
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        product(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 numbers, logical values, or text representations of numbers
            that you want to multiply.
          type:
            - Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>
  - uid: office.Excel.Functions.proper
    summary: >-
      Converts a text string to proper case; the first letter in each word to uppercase, and all other letters to
      lowercase.


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: proper(text)
    fullName: office.Excel.Functions.proper
    langs:
      - typeScript
    type: method
    syntax:
      content: 'proper(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;'
      return:
        type:
          - FunctionResult<string>
        description: ''
      parameters:
        - id: text
          description: >-
            Is text enclosed in quotation marks, a formula that returns text, or a reference to a cell containing text
            to partially capitalize.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.pv
    summary: |-
      Returns the present value of an investment: the total amount that a series of future payments is worth now.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'pv(rate, nper, pmt, fv, type)'
    fullName: office.Excel.Functions.pv
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        pv(rate: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, nper: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, pmt: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, fv?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, type?:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: rate
          description: 'Is the interest rate per period. For example, use 6%/4 for quarterly payments at 6% APR.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: nper
          description: Is the total number of payment periods in an investment.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: pmt
          description: Is the payment made each period and cannot change over the life of the investment.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: fv
          description: 'Is the future value, or a cash balance you want to attain after the last payment is made.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: type
          description: >-
            Is a logical value: payment at the beginning of the period = 1; payment at the end of the period = 0 or
            omitted.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.quartile_Exc
    summary: |-
      Returns the quartile of a data set, based on percentile values from 0..1, exclusive.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'quartile_Exc(array, quart)'
    fullName: office.Excel.Functions.quartile_Exc
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        quartile_Exc(array: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, quart: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: array
          description: Is the array or cell range of numeric values for which you want the quartile value.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: quart
          description: 'Is a number: minimum value = 0; 1st quartile = 1; median value = 2; 3rd quartile = 3; maximum value = 4.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.quartile_Inc
    summary: |-
      Returns the quartile of a data set, based on percentile values from 0..1, inclusive.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'quartile_Inc(array, quart)'
    fullName: office.Excel.Functions.quartile_Inc
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        quartile_Inc(array: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, quart: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: array
          description: Is the array or cell range of numeric values for which you want the quartile value.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: quart
          description: 'Is a number: minimum value = 0; 1st quartile = 1; median value = 2; 3rd quartile = 3; maximum value = 4.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.quotient
    summary: |-
      Returns the integer portion of a division.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'quotient(numerator, denominator)'
    fullName: office.Excel.Functions.quotient
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        quotient(numerator: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        denominator: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: numerator
          description: Is the dividend.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: denominator
          description: Is the divisor.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.radians
    summary: |-
      Converts degrees to radians.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: radians(angle)
    fullName: office.Excel.Functions.radians
    langs:
      - typeScript
    type: method
    syntax:
      content: 'radians(angle: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: angle
          description: Is an angle in degrees that you want to convert.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.rand
    summary: |-
      Returns a random number greater than or equal to 0 and less than 1, evenly distributed (changes on recalculation).

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: rand()
    fullName: office.Excel.Functions.rand
    langs:
      - typeScript
    type: method
    syntax:
      content: 'rand(): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
  - uid: office.Excel.Functions.randBetween
    summary: |-
      Returns a random number between the numbers you specify.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'randBetween(bottom, top)'
    fullName: office.Excel.Functions.randBetween
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        randBetween(bottom: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        top: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: bottom
          description: Is the smallest integer RANDBETWEEN will return.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: top
          description: Is the largest integer RANDBETWEEN will return.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.rank_Avg
    summary: >-
      Returns the rank of a number in a list of numbers: its size relative to other values in the list; if more than one
      value has the same rank, the average rank is returned.


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'rank_Avg(number, ref, order)'
    fullName: office.Excel.Functions.rank_Avg
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        rank_Avg(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, ref: Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, order?: boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the number for which you want to find the rank.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: ref
          description: 'Is an array of, or a reference to, a list of numbers. Nonnumeric values are ignored.'
          type:
            - Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: order
          description: >-
            Is a number: rank in the list sorted descending = 0 or omitted; rank in the list sorted ascending = any
            nonzero value.
          type:
            - boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.rank_Eq
    summary: >-
      Returns the rank of a number in a list of numbers: its size relative to other values in the list; if more than one
      value has the same rank, the top rank of that set of values is returned.


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'rank_Eq(number, ref, order)'
    fullName: office.Excel.Functions.rank_Eq
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        rank_Eq(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, ref: Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, order?: boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the number for which you want to find the rank.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: ref
          description: 'Is an array of, or a reference to, a list of numbers. Nonnumeric values are ignored.'
          type:
            - Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: order
          description: >-
            Is a number: rank in the list sorted descending = 0 or omitted; rank in the list sorted ascending = any
            nonzero value.
          type:
            - boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.rate
    summary: >-
      Returns the interest rate per period of a loan or an investment. For example, use 6%/4 for quarterly payments at
      6% APR.


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'rate(nper, pmt, pv, fv, type, guess)'
    fullName: office.Excel.Functions.rate
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        rate(nper: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, pmt: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, pv: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, fv?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, type?:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, guess?: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: nper
          description: Is the total number of payment periods for the loan or investment.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: pmt
          description: Is the payment made each period and cannot change over the life of the loan or investment.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: pv
          description: 'Is the present value: the total amount that a series of future payments is worth now.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: fv
          description: >-
            Is the future value, or a cash balance you want to attain after the last payment is made. If omitted, uses
            Fv = 0.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: type
          description: >-
            Is a logical value: payment at the beginning of the period = 1; payment at the end of the period = 0 or
            omitted.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: guess
          description: 'Is your guess for what the rate will be; if omitted, Guess = 0.1 (10 percent).'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.received
    summary: |-
      Returns the amount received at maturity for a fully invested security.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'received(settlement, maturity, investment, discount, basis)'
    fullName: office.Excel.Functions.received
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        received(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        investment: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        discount: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?:
        number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: settlement
          description: 'Is the security''s settlement date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: investment
          description: Is the amount invested in the security.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: discount
          description: Is the security's discount rate.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: basis
          description: Is the type of day count basis to use.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.replace
    summary: |-
      Replaces part of a text string with a different text string.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'replace(oldText, startNum, numChars, newText)'
    fullName: office.Excel.Functions.replace
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        replace(oldText: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, startNum: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numChars: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, newText: string | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<string>;
      return:
        type:
          - FunctionResult<string>
        description: ''
      parameters:
        - id: oldText
          description: Is text in which you want to replace some characters.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: startNum
          description: Is the position of the character in oldText that you want to replace with newText.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: numChars
          description: Is the number of characters in oldText that you want to replace.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: newText
          description: Is the text that will replace characters in oldText.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.replaceB
    summary: |-
      Replaces part of a text string with a different text string. Use with double-byte character sets (DBCS).

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'replaceB(oldText, startNum, numBytes, newText)'
    fullName: office.Excel.Functions.replaceB
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        replaceB(oldText: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, startNum: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numBytes: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, newText: string | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<string>;
      return:
        type:
          - FunctionResult<string>
        description: ''
      parameters:
        - id: oldText
          description: Is text in which you want to replace some characters.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: startNum
          description: Is the position of the character in oldText that you want to replace with newText.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: numBytes
          description: Is the number of characters in oldText that you want to replace with newText.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: newText
          description: Is the text that will replace characters in oldText.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.rept
    summary: |-
      Repeats text a given number of times. Use REPT to fill a cell with a number of instances of a text string.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'rept(text, numberTimes)'
    fullName: office.Excel.Functions.rept
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        rept(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numberTimes: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;
      return:
        type:
          - FunctionResult<string>
        description: ''
      parameters:
        - id: text
          description: Is the text you want to repeat.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: numberTimes
          description: Is a positive number specifying the number of times to repeat text.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.right
    summary: |-
      Returns the specified number of characters from the end of a text string.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'right(text, numChars)'
    fullName: office.Excel.Functions.right
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        right(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numChars?: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;
      return:
        type:
          - FunctionResult<string>
        description: ''
      parameters:
        - id: text
          description: Is the text string that contains the characters you want to extract.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: numChars
          description: 'Specifies how many characters you want to extract, 1 if omitted.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.rightb
    summary: >-
      Returns the specified number of characters from the end of a text string. Use with double-byte character sets
      (DBCS).


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'rightb(text, numBytes)'
    fullName: office.Excel.Functions.rightb
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        rightb(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numBytes?: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;
      return:
        type:
          - FunctionResult<string>
        description: ''
      parameters:
        - id: text
          description: Is the text string containing the characters you want to extract.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: numBytes
          description: Specifies how many characters you want to extract.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.roman
    summary: |-
      Converts an Arabic numeral to Roman, as text.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'roman(number, form)'
    fullName: office.Excel.Functions.roman
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        roman(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, form?: boolean | number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;
      return:
        type:
          - FunctionResult<string>
        description: ''
      parameters:
        - id: number
          description: Is the Arabic numeral you want to convert.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: form
          description: Is the number specifying the type of Roman numeral you want.
          type:
            - boolean | number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.round
    summary: |-
      Rounds a number to a specified number of digits.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'round(number, numDigits)'
    fullName: office.Excel.Functions.round
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        round(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numDigits: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the number you want to round.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: numDigits
          description: >-
            Is the number of digits to which you want to round. Negative rounds to the left of the decimal point; zero
            to the nearest integer.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.roundDown
    summary: |-
      Rounds a number down, toward zero.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'roundDown(number, numDigits)'
    fullName: office.Excel.Functions.roundDown
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        roundDown(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numDigits: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is any real number that you want rounded down.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: numDigits
          description: >-
            Is the number of digits to which you want to round. Negative rounds to the left of the decimal point; zero
            or omitted, to the nearest integer.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.roundUp
    summary: |-
      Rounds a number up, away from zero.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'roundUp(number, numDigits)'
    fullName: office.Excel.Functions.roundUp
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        roundUp(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numDigits: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is any real number that you want rounded up.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: numDigits
          description: >-
            Is the number of digits to which you want to round. Negative rounds to the left of the decimal point; zero
            or omitted, to the nearest integer.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.rows
    summary: |-
      Returns the number of rows in a reference or array.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: rows(array)
    fullName: office.Excel.Functions.rows
    langs:
      - typeScript
    type: method
    syntax:
      content: 'rows(array: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: array
          description: 'Is an array, an array formula, or a reference to a range of cells for which you want the number of rows.'
          type:
            - Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.rri
    summary: |-
      Returns an equivalent interest rate for the growth of an investment.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'rri(nper, pv, fv)'
    fullName: office.Excel.Functions.rri
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        rri(nper: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, pv: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, fv: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: nper
          description: Is the number of periods for the investment.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: pv
          description: Is the present value of the investment.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: fv
          description: Is the future value of the investment.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.sec
    summary: |-
      Returns the secant of an angle.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: sec(number)
    fullName: office.Excel.Functions.sec
    langs:
      - typeScript
    type: method
    syntax:
      content: 'sec(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the angle in radians for which you want the secant.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.sech
    summary: |-
      Returns the hyperbolic secant of an angle.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: sech(number)
    fullName: office.Excel.Functions.sech
    langs:
      - typeScript
    type: method
    syntax:
      content: 'sech(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the angle in radians for which you want the hyperbolic secant.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.second
    summary: |-
      Returns the second, a number from 0 to 59.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: second(serialNumber)
    fullName: office.Excel.Functions.second
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        second(serialNumber: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: serialNumber
          description: >-
            Is a number in the date-time code used by Microsoft Excel or text in time format, such as 16:48:23 or
            4:48:47 PM.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.seriesSum
    summary: |-
      Returns the sum of a power series based on the formula.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'seriesSum(x, n, m, coefficients)'
    fullName: office.Excel.Functions.seriesSum
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        seriesSum(x: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, n:
        number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, m: number | string |
        boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, coefficients: Excel.Range | string |
        number | boolean | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: x
          description: Is the input value to the power series.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: 'n'
          description: Is the initial power to which you want to raise x.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: m
          description: Is the step by which to increase n for each term in the series.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: coefficients
          description: Is a set of coefficients by which each successive power of x is multiplied.
          type:
            - Excel.Range | string | number | boolean | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.sheet
    summary: |-
      Returns the sheet number of the referenced sheet.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: sheet(value)
    fullName: office.Excel.Functions.sheet
    langs:
      - typeScript
    type: method
    syntax:
      content: 'sheet(value?: Excel.Range | string | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: value
          description: >-
            Is the name of a sheet or a reference that you want the sheet number of. If omitted the number of the sheet
            containing the function is returned.
          type:
            - Excel.Range | string | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.sheets
    summary: |-
      Returns the number of sheets in a reference.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: sheets(reference)
    fullName: office.Excel.Functions.sheets
    langs:
      - typeScript
    type: method
    syntax:
      content: 'sheets(reference?: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: reference
          description: >-
            Is a reference for which you want to know the number of sheets it contains. If omitted the number of sheets
            in the workbook containing the function is returned.
          type:
            - Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.sign
    summary: >-
      Returns the sign of a number: 1 if the number is positive, zero if the number is zero, or -1 if the number is
      negative.


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: sign(number)
    fullName: office.Excel.Functions.sign
    langs:
      - typeScript
    type: method
    syntax:
      content: 'sign(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is any real number.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.sin
    summary: |-
      Returns the sine of an angle.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: sin(number)
    fullName: office.Excel.Functions.sin
    langs:
      - typeScript
    type: method
    syntax:
      content: 'sin(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the angle in radians for which you want the sine. Degrees \* PI()/180 = radians.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.sinh
    summary: |-
      Returns the hyperbolic sine of a number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: sinh(number)
    fullName: office.Excel.Functions.sinh
    langs:
      - typeScript
    type: method
    syntax:
      content: 'sinh(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is any real number.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.skew
    summary: >-
      Returns the skewness of a distribution: a characterization of the degree of asymmetry of a distribution around its
      mean.


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: skew(values)
    fullName: office.Excel.Functions.skew
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        skew(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 numbers or names, arrays, or references that contain numbers
            for which you want the skewness.
          type:
            - Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>
  - uid: office.Excel.Functions.skew_p
    summary: >-
      Returns the skewness of a distribution based on a population: a characterization of the degree of asymmetry of a
      distribution around its mean.


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: skew_p(values)
    fullName: office.Excel.Functions.skew_p
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        skew_p(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 254 numbers or names, arrays, or references that contain numbers
            for which you want the population skewness.
          type:
            - Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>
  - uid: office.Excel.Functions.sln
    summary: |-
      Returns the straight-line depreciation of an asset for one period.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'sln(cost, salvage, life)'
    fullName: office.Excel.Functions.sln
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        sln(cost: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, salvage: number | Excel.Range
        | Excel.RangeReference | Excel.FunctionResult<any>, life: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: cost
          description: Is the initial cost of the asset.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: salvage
          description: Is the salvage value at the end of the life of the asset.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: life
          description: >-
            Is the number of periods over which the asset is being depreciated (sometimes called the useful life of the
            asset).
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.small
    summary: |-
      Returns the k-th smallest value in a data set. For example, the fifth smallest number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'small(array, k)'
    fullName: office.Excel.Functions.small
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        small(array: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, k: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: array
          description: Is an array or range of numerical data for which you want to determine the k-th smallest value.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: k
          description: Is the position (from the smallest) in the array or range of the value to return.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.sqrt
    summary: |-
      Returns the square root of a number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: sqrt(number)
    fullName: office.Excel.Functions.sqrt
    langs:
      - typeScript
    type: method
    syntax:
      content: 'sqrt(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the number for which you want the square root.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.sqrtPi
    summary: |-
      Returns the square root of (number \* Pi).

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: sqrtPi(number)
    fullName: office.Excel.Functions.sqrtPi
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        sqrtPi(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the number by which p is multiplied.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.standardize
    summary: |-
      Returns a normalized value from a distribution characterized by a mean and standard deviation.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'standardize(x, mean, standardDev)'
    fullName: office.Excel.Functions.standardize
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        standardize(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, mean: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, standardDev: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: x
          description: Is the value you want to normalize.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: mean
          description: Is the arithmetic mean of the distribution.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: standardDev
          description: 'Is the standard deviation of the distribution, a positive number.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.stDev_P
    summary: |-
      Calculates standard deviation based on the entire population given as arguments (ignores logical values and text).

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: stDev_P(values)
    fullName: office.Excel.Functions.stDev_P
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        stDev_P(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 numbers corresponding to a population and can be numbers or
            references that contain numbers.
          type:
            - Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>
  - uid: office.Excel.Functions.stDev_S
    summary: |-
      Estimates standard deviation based on a sample (ignores logical values and text in the sample).

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: stDev_S(values)
    fullName: office.Excel.Functions.stDev_S
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        stDev_S(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 numbers corresponding to a sample of a population and can be
            numbers or references that contain numbers.
          type:
            - Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>
  - uid: office.Excel.Functions.stDevA
    summary: >-
      Estimates standard deviation based on a sample, including logical values and text. Text and the logical value
      FALSE have the value 0; the logical value TRUE has the value 1.


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: stDevA(values)
    fullName: office.Excel.Functions.stDevA
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        stDevA(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 values corresponding to a sample of a population and can be
            values or names or references to values.
          type:
            - Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>
  - uid: office.Excel.Functions.stDevPA
    summary: >-
      Calculates standard deviation based on an entire population, including logical values and text. Text and the
      logical value FALSE have the value 0; the logical value TRUE has the value 1.


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: stDevPA(values)
    fullName: office.Excel.Functions.stDevPA
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        stDevPA(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 values corresponding to a population and can be values,
            names, arrays, or references that contain values.
          type:
            - Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>
  - uid: office.Excel.Functions.substitute
    summary: |-
      Replaces existing text with new text in a text string.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'substitute(text, oldText, newText, instanceNum)'
    fullName: office.Excel.Functions.substitute
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        substitute(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, oldText: string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, newText: string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, instanceNum?: string | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<string>;
      return:
        type:
          - FunctionResult<string>
        description: ''
      parameters:
        - id: text
          description: Is the text or the reference to a cell containing text in which you want to substitute characters.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: oldText
          description: >-
            Is the existing text you want to replace. If the case of oldText does not match the case of text, SUBSTITUTE
            will not replace the text.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: newText
          description: Is the text you want to replace oldText with.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: instanceNum
          description: >-
            Specifies which occurrence of oldText you want to replace. If omitted, every instance of oldText is
            replaced.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.subtotal
    summary: |-
      Returns a subtotal in a list or database.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'subtotal(functionNum, values)'
    fullName: office.Excel.Functions.subtotal
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        subtotal(functionNum: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, ...values:
        Array<Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: functionNum
          description: Is the number 1 to 11 that specifies the summary function for the subtotal.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: values
          description: 'List of parameters, whose elements are 1 to 254 ranges or references for which you want the subtotal.'
          type:
            - Array<Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>
  - uid: office.Excel.Functions.sum
    summary: |-
      Adds all the numbers in a range of cells.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: sum(values)
    fullName: office.Excel.Functions.sum
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        sum(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 numbers to sum. Logical values and text are ignored in
            cells, included if typed as arguments.
          type:
            - Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>
  - uid: office.Excel.Functions.sumIf
    summary: |-
      Adds the cells specified by a given condition or criteria.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'sumIf(range, criteria, sumRange)'
    fullName: office.Excel.Functions.sumIf
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        sumIf(range: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: number | string | boolean
        | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, sumRange?: Excel.Range | Excel.RangeReference
        | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: range
          description: Is the range of cells you want evaluated.
          type:
            - Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: criteria
          description: >-
            Is the condition or criteria in the form of a number, expression, or text that defines which cells will be
            added.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: sumRange
          description: 'Are the actual cells to sum. If omitted, the cells in range are used.'
          type:
            - Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.sumIfs
    summary: |-
      Adds the cells specified by a given set of conditions or criteria.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'sumIfs(sumRange, values)'
    fullName: office.Excel.Functions.sumIfs
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        sumIfs(sumRange: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, ...values: Array<Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any> | number | string | boolean>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: sumRange
          description: Are the actual cells to sum.
          type:
            - Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: values
          description: >-
            List of parameters, where the first element of each pair is the Is the range of cells you want evaluated for
            the particular condition , and the second element is is the condition or criteria in the form of a number,
            expression, or text that defines which cells will be added.
          type:
            - Array<Excel.Range | Excel.RangeReference | Excel.FunctionResult<any> | number | string | boolean>
  - uid: office.Excel.Functions.sumSq
    summary: >-
      Returns the sum of the squares of the arguments. The arguments can be numbers, arrays, names, or references to
      cells that contain numbers.


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: sumSq(values)
    fullName: office.Excel.Functions.sumSq
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        sumSq(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 numbers, arrays, names, or references to arrays for which
            you want the sum of the squares.
          type:
            - Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>
  - uid: office.Excel.Functions.syd
    summary: |-
      Returns the sum-of-years' digits depreciation of an asset for a specified period.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'syd(cost, salvage, life, per)'
    fullName: office.Excel.Functions.syd
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        syd(cost: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, salvage: number | Excel.Range
        | Excel.RangeReference | Excel.FunctionResult<any>, life: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, per: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: cost
          description: Is the initial cost of the asset.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: salvage
          description: Is the salvage value at the end of the life of the asset.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: life
          description: >-
            Is the number of periods over which the asset is being depreciated (sometimes called the useful life of the
            asset).
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: per
          description: Is the period and must use the same units as Life.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.t
    summary: |-
      Checks whether a value is text, and returns the text if it is, or returns double quotes (empty text) if it is not.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: t(value)
    fullName: office.Excel.Functions.t
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        t(value: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<string>;
      return:
        type:
          - FunctionResult<string>
        description: ''
      parameters:
        - id: value
          description: Is the value to test.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.t_Dist
    summary: |-
      Returns the left-tailed Student's t-distribution.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 't_Dist(x, degFreedom, cumulative)'
    fullName: office.Excel.Functions.t_Dist
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        t_Dist(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, degFreedom: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, cumulative: boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: x
          description: Is the numeric value at which to evaluate the distribution.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: degFreedom
          description: Is an integer indicating the number of degrees of freedom that characterize the distribution.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: cumulative
          description: >-
            Is a logical value: for the cumulative distribution function, use TRUE; for the probability density
            function, use FALSE.
          type:
            - boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.t_Dist_2T
    summary: |-
      Returns the two-tailed Student's t-distribution.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 't_Dist_2T(x, degFreedom)'
    fullName: office.Excel.Functions.t_Dist_2T
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        t_Dist_2T(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, degFreedom: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: x
          description: Is the numeric value at which to evaluate the distribution.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: degFreedom
          description: Is an integer indicating the number of degrees of freedom that characterize the distribution.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.t_Dist_RT
    summary: |-
      Returns the right-tailed Student's t-distribution.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 't_Dist_RT(x, degFreedom)'
    fullName: office.Excel.Functions.t_Dist_RT
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        t_Dist_RT(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, degFreedom: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: x
          description: Is the numeric value at which to evaluate the distribution.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: degFreedom
          description: Is an integer indicating the number of degrees of freedom that characterize the distribution.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.t_Inv
    summary: |-
      Returns the left-tailed inverse of the Student's t-distribution.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 't_Inv(probability, degFreedom)'
    fullName: office.Excel.Functions.t_Inv
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        t_Inv(probability: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, degFreedom: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: probability
          description: >-
            Is the probability associated with the two-tailed Student's t-distribution, a number between 0 and 1
            inclusive.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: degFreedom
          description: Is a positive integer indicating the number of degrees of freedom to characterize the distribution.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.t_Inv_2T
    summary: |-
      Returns the two-tailed inverse of the Student's t-distribution.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 't_Inv_2T(probability, degFreedom)'
    fullName: office.Excel.Functions.t_Inv_2T
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        t_Inv_2T(probability: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, degFreedom:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: probability
          description: >-
            Is the probability associated with the two-tailed Student's t-distribution, a number between 0 and 1
            inclusive.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: degFreedom
          description: Is a positive integer indicating the number of degrees of freedom to characterize the distribution.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.tan
    summary: |-
      Returns the tangent of an angle.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: tan(number)
    fullName: office.Excel.Functions.tan
    langs:
      - typeScript
    type: method
    syntax:
      content: 'tan(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the angle in radians for which you want the tangent. Degrees \* PI()/180 = radians.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.tanh
    summary: |-
      Returns the hyperbolic tangent of a number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: tanh(number)
    fullName: office.Excel.Functions.tanh
    langs:
      - typeScript
    type: method
    syntax:
      content: 'tanh(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is any real number.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.tbillEq
    summary: |-
      Returns the bond-equivalent yield for a treasury bill.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'tbillEq(settlement, maturity, discount)'
    fullName: office.Excel.Functions.tbillEq
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        tbillEq(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, discount:
        number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: settlement
          description: 'Is the Treasury bill''s settlement date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: maturity
          description: 'Is the Treasury bill''s maturity date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: discount
          description: Is the Treasury bill's discount rate.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.tbillPrice
    summary: |-
      Returns the price per $100 face value for a treasury bill.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'tbillPrice(settlement, maturity, discount)'
    fullName: office.Excel.Functions.tbillPrice
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        tbillPrice(settlement: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, maturity: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, discount: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: settlement
          description: 'Is the Treasury bill''s settlement date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: maturity
          description: 'Is the Treasury bill''s maturity date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: discount
          description: Is the Treasury bill's discount rate.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.tbillYield
    summary: |-
      Returns the yield for a treasury bill.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'tbillYield(settlement, maturity, pr)'
    fullName: office.Excel.Functions.tbillYield
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        tbillYield(settlement: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, maturity: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, pr: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: settlement
          description: 'Is the Treasury bill''s settlement date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: maturity
          description: 'Is the Treasury bill''s maturity date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: pr
          description: Is the Treasury Bill's price per $100 face value.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.text
    summary: |-
      Converts a value to text in a specific number format.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'text(value, formatText)'
    fullName: office.Excel.Functions.text
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        text(value: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        formatText: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;
      return:
        type:
          - FunctionResult<string>
        description: ''
      parameters:
        - id: value
          description: >-
            Is a number, a formula that evaluates to a numeric value, or a reference to a cell containing a numeric
            value.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: formatText
          description: >-
            Is a number format in text form from the Category box on the Number tab in the Format Cells dialog box (not
            General).
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.time
    summary: |-
      Converts hours, minutes, and seconds given as numbers to an Excel serial number, formatted with a time format.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'time(hour, minute, second)'
    fullName: office.Excel.Functions.time
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        time(hour: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, minute: number | Excel.Range
        | Excel.RangeReference | Excel.FunctionResult<any>, second: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: hour
          description: Is a number from 0 to 23 representing the hour.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: minute
          description: Is a number from 0 to 59 representing the minute.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: second
          description: Is a number from 0 to 59 representing the second.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.timevalue
    summary: >-
      Converts a text time to an Excel serial number for a time, a number from 0 (12:00:00 AM) to 0.999988426 (11:59:59
      PM). Format the number with a time format after entering the formula.


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: timevalue(timeText)
    fullName: office.Excel.Functions.timevalue
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        timevalue(timeText: string | number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: timeText
          description: >-
            Is a text string that gives a time in any one of the Microsoft Excel time formats (date information in the
            string is ignored).
          type:
            - string | number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.today
    summary: |-
      Returns the current date formatted as a date.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: today()
    fullName: office.Excel.Functions.today
    langs:
      - typeScript
    type: method
    syntax:
      content: 'today(): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
  - uid: office.Excel.Functions.toJSON
    name: toJSON()
    fullName: office.Excel.Functions.toJSON
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON:'
      return:
        type:
          - '{}'
        description: ''
  - uid: office.Excel.Functions.trim
    summary: |-
      Removes all spaces from a text string except for single spaces between words.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: trim(text)
    fullName: office.Excel.Functions.trim
    langs:
      - typeScript
    type: method
    syntax:
      content: 'trim(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;'
      return:
        type:
          - FunctionResult<string>
        description: ''
      parameters:
        - id: text
          description: Is the text from which you want spaces removed.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.trimMean
    summary: |-
      Returns the mean of the interior portion of a set of data values.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'trimMean(array, percent)'
    fullName: office.Excel.Functions.trimMean
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        trimMean(array: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, percent: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: array
          description: Is the range or array of values to trim and average.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: percent
          description: Is the fractional number of data points to exclude from the top and bottom of the data set.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.true
    summary: |-
      Returns the logical value TRUE.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: true()
    fullName: office.Excel.Functions.true
    langs:
      - typeScript
    type: method
    syntax:
      content: 'true(): FunctionResult<boolean>;'
      return:
        type:
          - FunctionResult<boolean>
        description: ''
  - uid: office.Excel.Functions.trunc
    summary: |-
      Truncates a number to an integer by removing the decimal, or fractional, part of the number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'trunc(number, numDigits)'
    fullName: office.Excel.Functions.trunc
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        trunc(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numDigits?: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: number
          description: Is the number you want to truncate.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: numDigits
          description: 'Is a number specifying the precision of the truncation, 0 (zero) if omitted.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.type
    summary: >-
      Returns an integer representing the data type of a value: number = 1; text = 2; logical value = 4; error value =
      16; array = 64.


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: type(value)
    fullName: office.Excel.Functions.type
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        type(value: boolean | string | number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: value
          description: Can be any value.
          type:
            - boolean | string | number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.unichar
    summary: |-
      Returns the Unicode character referenced by the given numeric value.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: unichar(number)
    fullName: office.Excel.Functions.unichar
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        unichar(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<string>;
      return:
        type:
          - FunctionResult<string>
        description: ''
      parameters:
        - id: number
          description: Is the Unicode number representing a character.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.unicode
    summary: |-
      Returns the number (code point) corresponding to the first character of the text.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: unicode(text)
    fullName: office.Excel.Functions.unicode
    langs:
      - typeScript
    type: method
    syntax:
      content: 'unicode(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: text
          description: Is the character that you want the Unicode value of.
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.upper
    summary: |-
      Converts a text string to all uppercase letters.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: upper(text)
    fullName: office.Excel.Functions.upper
    langs:
      - typeScript
    type: method
    syntax:
      content: 'upper(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;'
      return:
        type:
          - FunctionResult<string>
        description: ''
      parameters:
        - id: text
          description: 'Is the text you want converted to uppercase, a reference or a text string.'
          type:
            - string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.usdollar
    summary: |-
      Converts a number to text, using currency format.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'usdollar(number, decimals)'
    fullName: office.Excel.Functions.usdollar
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        usdollar(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, decimals?: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;
      return:
        type:
          - FunctionResult<string>
        description: ''
      parameters:
        - id: number
          description: 'Is a number, a reference to a cell containing a number, or a formula that evaluates to a number.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: decimals
          description: Is the number of digits to the right of the decimal point.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.value
    summary: |-
      Converts a text string that represents a number to a number.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: value(text)
    fullName: office.Excel.Functions.value
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        value(text: string | boolean | number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: text
          description: Is the text enclosed in quotation marks or a reference to a cell containing the text you want to convert.
          type:
            - string | boolean | number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.var_P
    summary: |-
      Calculates variance based on the entire population (ignores logical values and text in the population).

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: var_P(values)
    fullName: office.Excel.Functions.var_P
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        var_P(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: values
          description: 'List of parameters, whose elements are 1 to 255 numeric arguments corresponding to a population.'
          type:
            - Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>
  - uid: office.Excel.Functions.var_S
    summary: |-
      Estimates variance based on a sample (ignores logical values and text in the sample).

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: var_S(values)
    fullName: office.Excel.Functions.var_S
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        var_S(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: values
          description: 'List of parameters, whose elements are 1 to 255 numeric arguments corresponding to a sample of a population.'
          type:
            - Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>
  - uid: office.Excel.Functions.varA
    summary: >-
      Estimates variance based on a sample, including logical values and text. Text and the logical value FALSE have the
      value 0; the logical value TRUE has the value 1.


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: varA(values)
    fullName: office.Excel.Functions.varA
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        varA(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: values
          description: 'List of parameters, whose elements are 1 to 255 value arguments corresponding to a sample of a population.'
          type:
            - Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>
  - uid: office.Excel.Functions.varPA
    summary: >-
      Calculates variance based on the entire population, including logical values and text. Text and the logical value
      FALSE have the value 0; the logical value TRUE has the value 1.


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: varPA(values)
    fullName: office.Excel.Functions.varPA
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        varPA(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: values
          description: 'List of parameters, whose elements are 1 to 255 value arguments corresponding to a population.'
          type:
            - Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>
  - uid: office.Excel.Functions.vdb
    summary: >-
      Returns the depreciation of an asset for any period you specify, including partial periods, using the
      double-declining balance method or some other method you specify.


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'vdb(cost, salvage, life, startPeriod, endPeriod, factor, noSwitch)'
    fullName: office.Excel.Functions.vdb
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        vdb(cost: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, salvage: number | Excel.Range
        | Excel.RangeReference | Excel.FunctionResult<any>, life: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, startPeriod: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        endPeriod: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, factor?: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, noSwitch?: boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: cost
          description: Is the initial cost of the asset.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: salvage
          description: Is the salvage value at the end of the life of the asset.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: life
          description: >-
            Is the number of periods over which the asset is being depreciated (sometimes called the useful life of the
            asset).
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: startPeriod
          description: 'Is the starting period for which you want to calculate the depreciation, in the same units as Life.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: endPeriod
          description: 'Is the ending period for which you want to calculate the depreciation, in the same units as Life.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: factor
          description: 'Is the rate at which the balance declines, 2 (double-declining balance) if omitted.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: noSwitch
          description: >-
            Switch to straight-line depreciation when depreciation is greater than the declining balance = FALSE or
            omitted; do not switch = TRUE.
          type:
            - boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.vlookup
    summary: >-
      Looks for a value in the leftmost column of a table, and then returns a value in the same row from a column you
      specify. By default, the table must be sorted in an ascending order.


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'vlookup(lookupValue, tableArray, colIndexNum, rangeLookup)'
    fullName: office.Excel.Functions.vlookup
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        vlookup(lookupValue: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        tableArray: Excel.Range | number | Excel.RangeReference | Excel.FunctionResult<any>, colIndexNum: Excel.Range |
        number | Excel.RangeReference | Excel.FunctionResult<any>, rangeLookup?: boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number | string | boolean>;
      return:
        type:
          - FunctionResult<number | string | boolean>
        description: ''
      parameters:
        - id: lookupValue
          description: >-
            Is the value to be found in the first column of the table, and can be a value, a reference, or a text
            string.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: tableArray
          description: >-
            Is a table of text, numbers, or logical values, in which data is retrieved. tableArray can be a reference to
            a range or a range name.
          type:
            - Excel.Range | number | Excel.RangeReference | Excel.FunctionResult<any>
        - id: colIndexNum
          description: >-
            Is the column number in tableArray from which the matching value should be returned. The first column of
            values in the table is column 1.
          type:
            - Excel.Range | number | Excel.RangeReference | Excel.FunctionResult<any>
        - id: rangeLookup
          description: >-
            Is a logical value: to find the closest match in the first column (sorted in ascending order) = TRUE or
            omitted; find an exact match = FALSE.
          type:
            - boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.weekday
    summary: |-
      Returns a number from 1 to 7 identifying the day of the week of a date.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'weekday(serialNumber, returnType)'
    fullName: office.Excel.Functions.weekday
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        weekday(serialNumber: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, returnType?:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: serialNumber
          description: Is a number that represents a date.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: returnType
          description: >-
            Is a number: for Sunday=1 through Saturday=7, use 1; for Monday=1 through Sunday=7, use 2; for Monday=0
            through Sunday=6, use 3.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.weekNum
    summary: |-
      Returns the week number in the year.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'weekNum(serialNumber, returnType)'
    fullName: office.Excel.Functions.weekNum
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        weekNum(serialNumber: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, returnType?: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: serialNumber
          description: Is the date-time code used by Microsoft Excel for date and time calculation.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: returnType
          description: Is a number (1 or 2) that determines the type of the return value.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.weibull_Dist
    summary: |-
      Returns the Weibull distribution.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'weibull_Dist(x, alpha, beta, cumulative)'
    fullName: office.Excel.Functions.weibull_Dist
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        weibull_Dist(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, alpha: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, beta: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, cumulative: boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: x
          description: 'Is the value at which to evaluate the function, a nonnegative number.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: alpha
          description: 'Is a parameter to the distribution, a positive number.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: beta
          description: 'Is a parameter to the distribution, a positive number.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: cumulative
          description: >-
            Is a logical value: for the cumulative distribution function, use TRUE; for the probability mass function,
            use FALSE.
          type:
            - boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.workDay
    summary: |-
      Returns the serial number of the date before or after a specified number of workdays.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'workDay(startDate, days, holidays)'
    fullName: office.Excel.Functions.workDay
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        workDay(startDate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        days: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, holidays?:
        number | string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: startDate
          description: Is a serial date number that represents the start date.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: days
          description: Is the number of nonweekend and non-holiday days before or after startDate.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: holidays
          description: >-
            Is an optional array of one or more serial date numbers to exclude from the working calendar, such as state
            and federal holidays and floating holidays.
          type:
            - number | string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.workDay_Intl
    summary: >-
      Returns the serial number of the date before or after a specified number of workdays with custom weekend
      parameters.


      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'workDay_Intl(startDate, days, weekend, holidays)'
    fullName: office.Excel.Functions.workDay_Intl
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        workDay_Intl(startDate: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, days: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, weekend?: number | string | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, holidays?: number | string | Excel.Range | boolean | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: startDate
          description: Is a serial date number that represents the start date.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: days
          description: Is the number of nonweekend and non-holiday days before or after startDate.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: weekend
          description: Is a number or string specifying when weekends occur.
          type:
            - number | string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: holidays
          description: >-
            Is an optional array of one or more serial date numbers to exclude from the working calendar, such as state
            and federal holidays and floating holidays.
          type:
            - number | string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.xirr
    summary: |-
      Returns the internal rate of return for a schedule of cash flows.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'xirr(values, dates, guess)'
    fullName: office.Excel.Functions.xirr
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        xirr(values: number | string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>, dates:
        number | string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>, guess?: number |
        string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: values
          description: Is a series of cash flows that correspond to a schedule of payments in dates.
          type:
            - number | string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>
        - id: dates
          description: Is a schedule of payment dates that corresponds to the cash flow payments.
          type:
            - number | string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>
        - id: guess
          description: Is a number that you guess is close to the result of XIRR.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.xnpv
    summary: |-
      Returns the net present value for a schedule of cash flows.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'xnpv(rate, values, dates)'
    fullName: office.Excel.Functions.xnpv
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        xnpv(rate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, values:
        number | string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>, dates: number |
        string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: rate
          description: Is the discount rate to apply to the cash flows.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: values
          description: Is a series of cash flows that correspond to a schedule of payments in dates.
          type:
            - number | string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>
        - id: dates
          description: Is a schedule of payment dates that corresponds to the cash flow payments.
          type:
            - number | string | Excel.Range | boolean | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.xor
    summary: |-
      Returns a logical 'Exclusive Or' of all arguments.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: xor(values)
    fullName: office.Excel.Functions.xor
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        xor(...values: Array<boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<boolean>;
      return:
        type:
          - FunctionResult<boolean>
        description: ''
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 254 conditions you want to test that can be either TRUE or FALSE
            and can be logical values, arrays, or references.
          type:
            - Array<boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>
  - uid: office.Excel.Functions.year
    summary: |-
      Returns the year of a date, an integer in the range 1900 - 9999.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: year(serialNumber)
    fullName: office.Excel.Functions.year
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        year(serialNumber: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: serialNumber
          description: Is a number in the date-time code used by Microsoft Excel.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.yearFrac
    summary: |-
      Returns the year fraction representing the number of whole days between start\_date and end\_date.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'yearFrac(startDate, endDate, basis)'
    fullName: office.Excel.Functions.yearFrac
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        yearFrac(startDate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        endDate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?:
        number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: startDate
          description: Is a serial date number that represents the start date.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: endDate
          description: Is a serial date number that represents the end date.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: basis
          description: Is the type of day count basis to use.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.yield
    summary: |-
      Returns the yield on a security that pays periodic interest.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'yield(settlement, maturity, rate, pr, redemption, frequency, basis)'
    fullName: office.Excel.Functions.yield
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        yield(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, rate:
        number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, pr: number | string
        | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, redemption: number | string |
        boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, frequency: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string | boolean | Excel.Range
        | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: settlement
          description: 'Is the security''s settlement date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: rate
          description: Is the security's annual coupon rate.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: pr
          description: Is the security's price per $100 face value.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: redemption
          description: Is the security's redemption value per $100 face value.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: frequency
          description: Is the number of coupon payments per year.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: basis
          description: Is the type of day count basis to use.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.yieldDisc
    summary: |-
      Returns the annual yield for a discounted security. For example, a treasury bill.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'yieldDisc(settlement, maturity, pr, redemption, basis)'
    fullName: office.Excel.Functions.yieldDisc
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        yieldDisc(settlement: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, maturity: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, pr: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, redemption: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, basis?: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: settlement
          description: 'Is the security''s settlement date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: pr
          description: Is the security's price per $100 face value.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: redemption
          description: Is the security's redemption value per $100 face value.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: basis
          description: Is the type of day count basis to use.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.yieldMat
    summary: |-
      Returns the annual yield of a security that pays interest at maturity.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'yieldMat(settlement, maturity, issue, rate, pr, basis)'
    fullName: office.Excel.Functions.yieldMat
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        yieldMat(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, issue:
        number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, rate: number |
        string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, pr: number | string | boolean
        | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: settlement
          description: 'Is the security''s settlement date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: issue
          description: 'Is the security''s issue date, expressed as a serial date number.'
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: rate
          description: Is the security's interest rate at date of issue.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: pr
          description: Is the security's price per $100 face value.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: basis
          description: Is the type of day count basis to use.
          type:
            - number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
  - uid: office.Excel.Functions.z_Test
    summary: |-
      Returns the one-tailed P-value of a z-test.

      \[ [Api set: ExcelApi 1.2](http://bing.com) \]
    name: 'z_Test(array, x, sigma)'
    fullName: office.Excel.Functions.z_Test
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        z_Test(array: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, x: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, sigma?: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      return:
        type:
          - FunctionResult<number>
        description: ''
      parameters:
        - id: array
          description: Is the array or range of data against which to test X.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: x
          description: Is the value to test.
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
        - id: sigma
          description: 'Is the population (known) standard deviation. If omitted, the sample standard deviation is used.'
          type:
            - number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>
