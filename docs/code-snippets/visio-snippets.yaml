Visio.Document.getActivePage:
  - |-
    Visio.run(function (ctx) { 
        var document = ctx.document;
        var activePage = document.getActivePage();
        activePage.load();
        return ctx.sync().then(function () {
        console.log("pageName: " +activePage.name);
          });   
    }).catch(function(error) {
            console.log("Error: " + error);
            if (error instanceof OfficeExtension.Error) {
                console.log("Debug info: " + JSON.stringify(error.debugInfo));
            }
    });
Visio.Document.setActivePage:
  - |-
    Visio.run(function (ctx) { 
        var document = ctx.document;
        var pageName = "Page-1";
        document.setActivePage(pageName);
        return ctx.sync();
    }).catch(function(error) {
            console.log("Error: " + error);
            if (error instanceof OfficeExtension.Error) {
                console.log("Debug info: " + JSON.stringify(error.debugInfo));
            }
    });
Visio.Document.startDataRefresh:
  - |-
    Visio.run(function (ctx) { 
        var document = ctx.document;
        document.startDataRefresh();
        return ctx.sync();
    }).catch(function(error) {
            console.log("Error: " + error);
            if (error instanceof OfficeExtension.Error) {
                console.log("Debug info: " + JSON.stringify(error.debugInfo));
            }
    });
Visio.PageCollection.getItem:
  - |-
    Visio.run(function (ctx) { 
        var pageName = 'Page-1';
        var page = ctx.document.pages.getItem(pageName);
        page.activate();
        return ctx.sync();
    }).catch(function(error) {
            console.log("Error: " + error);
            if (error instanceof OfficeExtension.Error) {
                console.log("Debug info: " + JSON.stringify(error.debugInfo));
            }
    });
Visio.PageView.centerViewportOnShape:
  - |-
    Visio.run(function (ctx) { 
        var activePage = ctx.document.getActivePage();
        var shape = activePage.shapes.getItem(0);
        activePage.view.centerViewportOnShape(shape.Id);
        return ctx.sync();
    }).catch(function(error) {
            console.log("Error: " + error);
            if (error instanceof OfficeExtension.Error) {
                console.log("Debug info: " + JSON.stringify(error.debugInfo));
            }
    });
Visio.ShapeCollection.getCount:
  - |-
    Visio.run(function (ctx) { 
        var activePage = ctx.document.getActivePage();
        var numShapesActivePage = activePage.shapes.getCount();
        return ctx.sync().then(function () {
            console.log("Shapes Count: " + numShapesActivePage.value);
        });
    
    }).catch(function(error) {
            console.log("Error: " + error);
            if (error instanceof OfficeExtension.Error) {
                console.log("Debug info: " + JSON.stringify(error.debugInfo));
            }
    });